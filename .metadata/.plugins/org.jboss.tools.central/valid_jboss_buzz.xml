<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Improved navigation in the OpenShift 4.5 Developer perspective</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/FXPyzCM6iTc/" /><category term="Containers" /><category term="Kubernetes" /><category term="Developer Perspective" /><category term="OpenShift 4.5" /><author><name>Jan Kleinert</name></author><id>https://developers.redhat.com/blog/?p=746717</id><updated>2020-07-13T07:05:43Z</updated><published>2020-07-13T07:05:43Z</published><content type="html">&lt;p&gt;The new &lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;Red Hat OpenShift 4.5 release&lt;/a&gt; includes a more streamlined and customizable navigation experience in the web console&amp;#8217;s Developer perspective. In this article, we quickly share the highlights of the new navigation features that we added based on user feedback.&lt;/p&gt; &lt;h2&gt;A new navigation scheme for discoverability&lt;/h2&gt; &lt;p&gt;To help with discoverability, we&amp;#8217;ve moved to a flat navigation scheme that has three sections in the main navigation, as shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_746737" style="width: 298px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F01.png"&gt;&lt;img aria-describedby="caption-attachment-746737" class="wp-image-746737 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F01.png" alt="A screenshot of the new, three-part navigation scheme." width="288" height="531" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F01.png 288w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F01-163x300.png 163w" sizes="(max-width: 288px) 100vw, 288px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746737" class="wp-caption-text"&gt;Figure 1: An overview of the main navigation in the OpenShift 4.5 web console&amp;#8217;s Developer perspective.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The first section of the navigation is task-based. In this section, you can use the &lt;b&gt;+Add&lt;/b&gt; button to add new applications or components to your project. This section is further organized into three areas:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Topology&lt;/b&gt;: View and interact with the applications in your project.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Monitoring&lt;/b&gt;: Access project details, including a dashboard, metrics, and events.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Search&lt;/b&gt;: Find project resources based on the resource type, label, or name.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The second section is object-based, with the options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Builds&lt;/strong&gt;: Access builds, BuildConfigs, and pipelines.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Helm&lt;/strong&gt;: Access Helm releases.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Project&lt;/strong&gt;: Access information about the project.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The third section is a customizable area where you can add your most frequently used resources for quick access. We added this section based on feedback that many users were going to the Administrator perspective to access resources such as secrets and config maps. You can now access secrets and config maps in this section by default.&lt;/p&gt; &lt;h2&gt;Customizable navigation&lt;/h2&gt; &lt;p&gt;You can now use the Search page to find and add items to the navigation, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_746747" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02.png"&gt;&lt;img aria-describedby="caption-attachment-746747" class="wp-image-746747 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02-1024x410.png" alt="A screenshot of the Search page with the option to add an item to the navigation pane." width="640" height="256" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02-1024x410.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02-300x120.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02-768x308.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02.png 1291w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746747" class="wp-caption-text"&gt;Figure 2: Use the Search page to find components to add to the navigation.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You can also remove items from the navigation by hovering over the menu item and clicking the blue circle with the minus (-) symbol, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_746757" style="width: 295px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F03.png"&gt;&lt;img aria-describedby="caption-attachment-746757" class="wp-image-746757 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F03.png" alt="A screenshot of the main navigation with the option to remove an item." width="285" height="109" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746757" class="wp-caption-text"&gt;Figure 3: Easily remove items from the main navigation.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Navigation improvements to the Developer perspective in the &lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;OpenShift&lt;/a&gt; 4.5 web console are based on user feedback. We hope the updates make it easier and quicker for you to interact with your projects.&lt;/p&gt; &lt;h2&gt;Give us your feedback!&lt;/h2&gt; &lt;p&gt;A huge part of the OpenShift developer experience process is receiving feedback and collaborating with our community and customers. We&amp;#8217;d love to hear from you. We hope you will share your thoughts on the &lt;a target="_blank" rel="nofollow" href="https://forms.gle/zDd4tuWvjndCRVMD8"&gt;OpenShift 4.5 Developer Experience feedback page&lt;/a&gt;. You can also join our &lt;a target="_blank" rel="nofollow" href="https://groups.google.com/forum/#!forum/openshift-dev-users"&gt;OpenShift Developer Experience Google Group&lt;/a&gt; to participate in discussions and learn about our Office Hours sessions, where you can collaborate with us and provide feedback about your experience using the OpenShift web console.&lt;/p&gt; &lt;h2&gt;Get started with OpenShift 4.5&lt;/h2&gt; &lt;p&gt;Are you ready to get started with the new OpenShift 4.5 web console? &lt;a target="_blank" rel="nofollow" href="http://www.openshift.com/try"&gt;Try OpenShift 4.5 today&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#038;title=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" data-a2a-url="https://developers.redhat.com/blog/2020/07/13/improved-navigation-in-the-openshift-4-5-developer-perspective/" data-a2a-title="Improved navigation in the OpenShift 4.5 Developer perspective"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/13/improved-navigation-in-the-openshift-4-5-developer-perspective/"&gt;Improved navigation in the OpenShift 4.5 Developer perspective&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/FXPyzCM6iTc" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The new Red Hat OpenShift 4.5 release includes a more streamlined and customizable navigation experience in the web console&amp;#8217;s Developer perspective. In this article, we quickly share the highlights of the new navigation features that we added based on user feedback. A new navigation scheme for discoverability To help with discoverability, we&amp;#8217;ve moved to a [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/13/improved-navigation-in-the-openshift-4-5-developer-perspective/"&gt;Improved navigation in the OpenShift 4.5 Developer perspective&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/13/improved-navigation-in-the-openshift-4-5-developer-perspective/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">746717</post-id><dc:creator>Jan Kleinert</dc:creator><dc:date>2020-07-13T07:05:43Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/13/improved-navigation-in-the-openshift-4-5-developer-perspective/</feedburner:origLink></entry><entry><title>What’s new in the OpenShift 4.5 console developer experience</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WmneOa_aLts/" /><category term="DevOps" /><category term="Event-Driven" /><category term="Kubernetes" /><category term="Operator" /><category term="helm charts" /><category term="Kubernetes developer" /><category term="OpenShift 4.5" /><category term="startup probe" /><category term="Virtual Machines" /><author><name>Serena Chechile Nichols</name></author><id>https://developers.redhat.com/blog/?p=746567</id><updated>2020-07-13T07:00:37Z</updated><published>2020-07-13T07:00:37Z</published><content type="html">&lt;p&gt;Each new release of &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt; includes usability improvements and features to help developers meet their goals. In OpenShift 4.5, we&amp;#8217;ve improved navigation and added a mechanism for customizing navigation and accessing frequently used resources from the Developer perspective.&lt;/p&gt; &lt;p&gt;We&amp;#8217;ve also brought application health checks back, added capabilities for Helm, and improved &lt;a href="https://developers.redhat.com/topics/kubernetes/operators"&gt;Red Hat Operators&lt;/a&gt; with these features:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Support for creating event sources in the web console.&lt;/li&gt; &lt;li&gt;New pipeline capabilities in the OpenShift Pipelines Operator.&lt;/li&gt; &lt;li&gt;A unified experience for virtual machines alongside your containers.&lt;/li&gt; &lt;li&gt;Easy access to command-line tools in a web terminal.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This article offers a preview of the goodies you get with OpenShift 4.5.&lt;/p&gt; &lt;h2&gt;Customizable developer navigation&lt;/h2&gt; &lt;p&gt;Have you found yourself frequently searching for the same resource type or switching to the Administrator perspective to access specific resources? OpenShift 4.5 has the answer! As one of several navigation improvements, OpenShift 4.5 now lets you use the Search page to find frequently used resources and add them to your navigation.&lt;/p&gt; &lt;p&gt;We added this feature because we heard from many users that they were using the Administrator perspective to access frequently used resources. Based on the same feedback, we also have pre-added ConfigMaps and Secrets to the default navigation, as shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_751477" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F01-CustomizeNav-resized.gif"&gt;&lt;img aria-describedby="caption-attachment-751477" class="wp-image-751477 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F01-CustomizeNav-resized.gif" alt="Demo of customizing navigation" width="640" height="312" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-751477" class="wp-caption-text"&gt;Figure 1: Customizable navigation with ConfigMaps and Secrets added by default.&lt;/p&gt;&lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Learn more&lt;/b&gt;: See &lt;a href="https://developers.redhat.com/blog/2020/07/13/improved-navigat…oper-perspective/ ‎"&gt;&lt;i&gt;Improved navigation in the OpenShift 4.5 Developer perspective&lt;/i&gt;&lt;/a&gt; for more about navigation improvements in the Developer perspective.&lt;/p&gt; &lt;h2&gt;Health checks are back in the web console&lt;/h2&gt; &lt;p&gt;Application health checks were available in the OpenShift 3 web console, and we&amp;#8217;ve received many requests to reinstate this feature on the application development side. In OpenShift 4.5, developers can once again use application health checks to proactively detect, handle, and mitigate certain situations.&lt;/p&gt; &lt;p&gt;You can add liveness, readiness, and startup probes as health checks from the OpenShift 4.5 web console. As shown in Figure 2, you can use the Advanced Options feature during creation, or you can add or edit health checks after you&amp;#8217;ve created an application.&lt;/p&gt; &lt;div id="attachment_751537" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F02-HealthCheck-AdvOptions-resized.gif"&gt;&lt;img aria-describedby="caption-attachment-751537" class="wp-image-751537" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F02-HealthCheck-AdvOptions-resized.gif" alt="Demo of adding a health check with Advanced Options." width="640" height="316" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-751537" class="wp-caption-text"&gt;Figure 2: Use the Advanced Options feature to add application health checks when you create your app.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Health check notifications&lt;/h3&gt; &lt;p&gt;If you have not configured health checks, you will see a notification displayed in the side panel of the new Topology view, as shown in Figure 3. The notification supports discoverability and provides a quick link for remediation.&lt;/p&gt; &lt;div id="attachment_746637" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F03-HealthCheck-Notification.png"&gt;&lt;img aria-describedby="caption-attachment-746637" class="wp-image-746637 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F03-HealthCheck-Notification-1024x502.png" alt="A screenshot of the new health check notifications feaure." width="640" height="314" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F03-HealthCheck-Notification-1024x502.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F03-HealthCheck-Notification-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F03-HealthCheck-Notification-768x377.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746637" class="wp-caption-text"&gt;Figure 3: Health check notifications in the new Topology view.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;New capabilities for Helm charts&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ve upped our game with &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/blog/getting-started-helm-openshift"&gt;Helm charts&lt;/a&gt; in OpenShift 4.5. Developers can now use the web console to instantly access release notes for an installed Helm chart, and you can also access release information on-demand as needed.&lt;/p&gt; &lt;p&gt;You can use the side panel in the web console&amp;#8217;s Topology view to upgrade a Helm release. The new &lt;b&gt;Upgrade&lt;/b&gt; action lets you update to a new version or directly edit the YAML file for your current release. The &lt;b&gt;Rollback&lt;/b&gt; action lets you open the &lt;b&gt;Revisions&lt;/b&gt; tab of a Helm Releases details page and see the revisions to a release. Finally, the new &lt;b&gt;Uninstall&lt;/b&gt; action uninstalls and cleans up all of the resources that were added during a Helm chart installation.&lt;/p&gt; &lt;p&gt;You can access these actions from the web console&amp;#8217;s Topology view, using the &lt;b&gt;Actions&lt;/b&gt; menu in the Topology side panel, as shown in Figure 4. Another option is to use the &lt;b&gt;Actions&lt;/b&gt; menu on the Helm Releases page.&lt;/p&gt; &lt;div id="attachment_746647" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F04-HelmReleaseActions.png"&gt;&lt;img aria-describedby="caption-attachment-746647" class="wp-image-746647 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F04-HelmReleaseActions-1024x502.png" alt="A screenshot of the Helm release actions in the Topology view." width="640" height="314" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F04-HelmReleaseActions-1024x502.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F04-HelmReleaseActions-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F04-HelmReleaseActions-768x376.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746647" class="wp-caption-text"&gt;Figure 4: Helm release actions in the side panel of the Topology view.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Operator improvements&lt;/h2&gt; &lt;p&gt;We also added a number of Operator-related improvements.&lt;/p&gt; &lt;h3&gt;Create event sources in the web console&lt;/h3&gt; &lt;p&gt;The &lt;a href="https://developers.redhat.com/topics/serverless-architecture"&gt;Red Hat OpenShift Serverless&lt;/a&gt; Operator already enhances the developer experience in OpenShift. With OpenShift 4.5, we&amp;#8217;ve made the experience even better by letting developers create event sources through the web console.&lt;/p&gt; &lt;p&gt;Event sources provide a mechanism for event providers to connect to your application and send events. In &lt;a href="https://developers.redhat.com/blog/category/topics/knative/"&gt;Knative&lt;/a&gt;, events are based on the &lt;a target="_blank" rel="nofollow" href="https://cloudevents.io/"&gt;Cloud Events Specification&lt;/a&gt;, which lets users describe event data in a cloud-agnostic way. Knative services by nature are scaled down to zero once they&amp;#8217;ve been idle for a set time. With event sources, providers can send events that automatically scale up the Knative service and make it available as needed.&lt;/p&gt; &lt;p&gt;As shown in Figure 5, developers can now use a form-based mechanism to create event sources and then use a Knative service as a &amp;#8220;sink&amp;#8221; or destination for the events.&lt;/p&gt; &lt;div id="attachment_752557" style="width: 649px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F05-EventSourceCreation-resized-1.gif"&gt;&lt;img aria-describedby="caption-attachment-752557" class="wp-image-752557" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F05-EventSourceCreation-resized-1.gif" alt="Demo of creating a serverless event source" width="639" height="314" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-752557" class="wp-caption-text"&gt;Figure 5: Create OpenShift Serverless event sources in the web console.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;New pipeline capabilities&lt;/h3&gt; &lt;p&gt;OpenShift 4.5 provides new pipeline capabilities when the &lt;a href="https://developers.redhat.com/blog/tag/pipelines/"&gt;OpenShift Pipelines Operator&lt;/a&gt; is installed. Among other enhancements to pipelines, developers can now:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add triggers to their pipelines (webhook support).&lt;/li&gt; &lt;li&gt;Mount volumes as workspaces when starting a pipeline.&lt;/li&gt; &lt;li&gt;Provide credentials for Git repositories and image registries, as needed.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Figure 6 shows the new option for providing credentials for Git repositories and image registries.&lt;/p&gt; &lt;div id="attachment_746657" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F06-Pipeline-CredentialOptions.png"&gt;&lt;img aria-describedby="caption-attachment-746657" class="wp-image-746657 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F06-Pipeline-CredentialOptions-1024x504.png" alt="A screenshot of the new pipeline credentials feature in the web console." width="640" height="315" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F06-Pipeline-CredentialOptions-1024x504.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F06-Pipeline-CredentialOptions-300x148.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F06-Pipeline-CredentialOptions-768x378.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746657" class="wp-caption-text"&gt;Figure 6: The new pipeline credential options in OpenShift 4.5.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;A unified experience for virtual machines alongside containers&lt;/h3&gt; &lt;p&gt;When the forthcoming &lt;a href="https://developers.redhat.com/blog/2020/01/21/first-steps-with-the-data-virtualization-operator-for-red-hat-openshift/"&gt;OpenShift Virtualization Operator 2.4&lt;/a&gt; is installed, developers will be able to import their virtual machines (VMs) from &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/technologies/virtualization/enterprise-virtualization"&gt;Red Hat Virtualization&lt;/a&gt; or VMware through a guided experience.&lt;/p&gt; &lt;p&gt;Virtual machines will be exposed in the Topology view. As developers would normally expect, VM actions such as start, stop, terminate, and access will be included.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: OpenShift Virtualization Operator 2.4 will be released shortly after OpenShift 4.5. Look for release news and information in an upcoming article.&lt;/p&gt; &lt;h3&gt;Easy access to the web terminal&lt;/h3&gt; &lt;p&gt;The web terminal provides you with the ability to use command-line interface (CLI) tools directly from your OpenShift web console. CLIs such as &lt;code&gt;oc&lt;/code&gt;, &lt;code&gt;odo&lt;/code&gt;, and &lt;code&gt;kubectl&lt;/code&gt; will be pre-installed and fully authenticated when you need them. The terminal window can be resized, minimized, and opened in a new tab. As shown in Figure 7, an icon in the masthead lets you create a web terminal. You can then use CLI tools directly from the web console.&lt;/p&gt; &lt;div id="attachment_746667" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F08-Terminal.png"&gt;&lt;img aria-describedby="caption-attachment-746667" class="wp-image-746667 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F08-Terminal-1024x502.png" alt="A screenshot of the new command-line terminal." width="640" height="314" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F08-Terminal-1024x502.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F08-Terminal-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F08-Terminal-768x376.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746667" class="wp-caption-text"&gt;Figure 7: Use command-line tools directly from the web terminal.&lt;/p&gt;&lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: This feature is Operator enabled, and will be coming as an update soon after the OpenShift 4.5 release. Stay tuned for a future article with more information.&lt;/p&gt; &lt;h2&gt;Take a tour of what&amp;#8217;s new&lt;/h2&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/S3sN8sPoO3g?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h2&gt;Give us your feedback!&lt;/h2&gt; &lt;p&gt;A huge part of the OpenShift developer experience is receiving feedback and collaborating with our community and customers. We&amp;#8217;d love to hear from you. We hope you will share your thoughts on the &lt;a target="_blank" rel="nofollow" href="https://forms.gle/zDd4tuWvjndCRVMD8"&gt;OpenShift 4.5 Developer Experience feedback page&lt;/a&gt;. You can also join our &lt;a target="_blank" rel="nofollow" href="https://groups.google.com/forum/#!forum/openshift-dev-users"&gt;OpenShift Developer Experience Google Group&lt;/a&gt; to participate in discussions and learn about our Office Hours sessions, where you can collaborate with us and provide feedback about your experience using the OpenShift web console.&lt;/p&gt; &lt;h2&gt;Get started with OpenShift 4.5&lt;/h2&gt; &lt;p&gt;Are you ready to get started with the new OpenShift 4.5 web console? &lt;a target="_blank" rel="nofollow" href="http://www.openshift.com/try"&gt;Try OpenShift 4.5 today&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F13%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#038;title=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" data-a2a-url="https://developers.redhat.com/blog/2020/07/13/whats-new-in-the-openshift-4-5-console-developer-experience/" data-a2a-title="What’s new in the OpenShift 4.5 console developer experience"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/13/whats-new-in-the-openshift-4-5-console-developer-experience/"&gt;What’s new in the OpenShift 4.5 console developer experience&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WmneOa_aLts" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Each new release of Red Hat OpenShift includes usability improvements and features to help developers meet their goals. In OpenShift 4.5, we&amp;#8217;ve improved navigation and added a mechanism for customizing navigation and accessing frequently used resources from the Developer perspective. We&amp;#8217;ve also brought application health checks back, added capabilities for Helm, and improved Red Hat [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/13/whats-new-in-the-openshift-4-5-console-developer-experience/"&gt;What’s new in the OpenShift 4.5 console developer experience&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/13/whats-new-in-the-openshift-4-5-console-developer-experience/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">746567</post-id><dc:creator>Serena Chechile Nichols</dc:creator><dc:date>2020-07-13T07:00:37Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/13/whats-new-in-the-openshift-4-5-console-developer-experience/</feedburner:origLink></entry><entry><title>Generate automated Grafana metrics dashboards for MicroProfile apps</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/nrCD7fqAq3s/" /><category term="Java" /><category term="Microservices" /><category term="Quarkus" /><category term="data visualization" /><category term="grafana" /><category term="metrics" /><category term="MicroProfile" /><category term="prometheus data" /><author><name>James Falkner</name></author><id>https://developers.redhat.com/blog/?p=740217</id><updated>2020-07-10T07:00:40Z</updated><published>2020-07-10T07:00:40Z</published><content type="html">&lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://grafana.com/"&gt;Grafana&lt;/a&gt; is an awesome visualization tool for seeing real-time metrics from your applications, and you can combine it with &lt;a target="_blank" rel="nofollow" href="https://microprofile.io"&gt;MicroProfile&lt;/a&gt; and similar tools to create one dashboard for multiple projects. Different projects use different names for metrics, however, so it is often necessary (and tedious) to handcraft the metrics for each project. Moreover, each project can expose its own custom metrics, and each MicroProfile vendor can also produce custom metrics, so there are many manual steps involved if you want to see all of your metrics in one place.&lt;/p&gt; &lt;p&gt;What if you could simply examine a running app and generate a dashboard with &lt;em&gt;all&lt;/em&gt; of its exposed metrics? That is exactly what you can do with the &lt;a target="_blank" rel="nofollow" href="https://github.com/jamesfalkner/microprofile-grafana"&gt;MicroProfile Metrics Generator&lt;/a&gt;, a new open source tool that I created to dynamically generate Grafana dashboards for any MicroProfile project by capturing and monitoring all of your project metrics. Once you&amp;#8217;ve created a dashboard, you can use it with Grafana, customize it to suit specific needs, and save it as a JSON file. You can also periodically regenerate your dashboards to bring in new metrics that you&amp;#8217;ve exposed in your application.&lt;/p&gt; &lt;p&gt;In this article, you will learn how to do just that: Use the MicroProfile Metrics Generator to create a unified dashboard for all of your project&amp;#8217;s metrics. &lt;span id="more-740217"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Also, if you want to run the generator locally, you&amp;#8217;ll need to install &lt;a target="_blank" rel="nofollow" href="https://jsonnet.org/"&gt;Jsonnet&lt;/a&gt; and &lt;a target="_blank" rel="nofollow" href="https://github.com/grafana/grafonnet-lib"&gt;Grafonnet&lt;/a&gt;. If you want to run Grafana and Prometheus locally, you will also need a &lt;code&gt;docker&lt;/code&gt; container.&lt;/p&gt; &lt;h2&gt;About MicroProfile Metrics&lt;/h2&gt; &lt;p&gt;The Eclipse MicroProfile project is split into multiple subprojects, one of which is &lt;a target="_blank" rel="nofollow" href="https://github.com/eclipse/microprofile-metrics"&gt;MicroProfile Metrics&lt;/a&gt;. The MicroProfile Metrics specification defines a &lt;a target="_blank" rel="nofollow" href="https://github.com/eclipse/microprofile-metrics/blob/master/spec/src/main/asciidoc/required-metrics.adoc"&gt;baseline set of metrics&lt;/a&gt; that are common across all MicroProfile-compatible projects. It also defines custom, per-vendor, and per-application metrics that developers can use to gather unique views into their running applications.&lt;/p&gt; &lt;p&gt;As an example, every MicroProfile vendor must expose the &lt;code&gt;memory.usedHeap&lt;/code&gt; metric, which displays the amount of Java heap memory available for an app at any point in time. Vendors also have the option to expose vendor-specific metrics such as internal cache statistics. Application developers can also instrument their apps (for example, with &lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java&lt;/a&gt; annotations like &lt;code&gt;@Timed&lt;/code&gt;) to collect metrics that are application-specific.&lt;/p&gt; &lt;p&gt;But, therein lies the problem: As a developer, you need documentation for both the vendor&amp;#8217;s and the application&amp;#8217;s metrics, and you won&amp;#8217;t know what metrics a MicroProfile application exposes unless that information was explicitly documented. As a result, many developers end up manually handcrafting dashboards for their projects and manually updating their dashboards as they add and remove metrics.&lt;/p&gt; &lt;p&gt;This is where the MicroProfile Metrics Generator comes into play.&lt;/p&gt; &lt;h2&gt;The MicroProfile Metrics Generator&lt;/h2&gt; &lt;p&gt;The MicroProfile specification defines a mechanism to list the metric metadata (name, description, units, and metric type) in a convenient RESTful endpoint. So, say that you have a running MicroProfile app with &lt;a href="https://developers.redhat.com/cheat-sheets/microprofile-metrics"&gt;MicroProfile Metrics&lt;/a&gt; enabled, listening at http://localhost:8080. To access this metadata, you simply enter:&lt;/p&gt; &lt;pre&gt;$ curl -X OPTIONS -H "Accept: application/json" http://localhost:8080/metrics&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;OPTIONS /metrics&lt;/code&gt; endpoint works for any MicroProfile app, and gives you a set of metadata that looks something like this:&lt;/p&gt; &lt;pre&gt;{ "base": { "classloader.loadedClasses.count": { "unit": "none", "type": "gauge", "description": "Displays the number of classes that are currently loaded in the Java virtual machine.", "displayName": "Current Loaded Class Count", "tags": [ [ ] ] }, ... }, "vendor": { ... }, "application": { ... } } &lt;/pre&gt; &lt;p&gt;Note the separate sections for &lt;code&gt;base&lt;/code&gt; (required), &lt;code&gt;vendor&lt;/code&gt;, and &lt;code&gt;application&lt;/code&gt; metrics.&lt;/p&gt; &lt;p&gt;The MicroProfile Metrics Generator uses this output to create a Grafana dashboard that is compliant with the &lt;a target="_blank" rel="nofollow" href="https://grafana.com/docs/grafana/latest/reference/dashboard/"&gt;Grafana Dashboard JSON Model specification&lt;/a&gt;. It also uses the MicroProfile Metrics specification to craft appropriate &lt;a target="_blank" rel="nofollow" href="https://github.com/eclipse/microprofile-metrics/blob/master/spec/src/main/asciidoc/rest-endpoints.adoc#openmetrics-format"&gt;OpenMetrics names&lt;/a&gt; that are used in the actual metrics output from the running app.&lt;/p&gt; &lt;p&gt;You can then use the output from this tool to generate the Grafana dashboard, all you have to do is pass the content from the &lt;code&gt;OPTIONS /metrics&lt;/code&gt; endpoint to the tool. Another endpoint, &lt;code&gt;GET /metrics&lt;/code&gt;, lets you see the point in time that the application exposed the metrics. In this case, you would enter the following to see the metrics from the running example application:&lt;/p&gt; &lt;pre&gt;$ curl http://localhost:8080/metrics&lt;/pre&gt; &lt;p&gt;Once you have connected to these endpoints, you can set up the metrics to be periodically read and consumed by a tool like &lt;a target="_blank" rel="nofollow" href="https://prometheus.io/"&gt;Prometheus&lt;/a&gt;, which is currently the underlying tool for the generator. Prometheus stores the metrics and provides alerting and querying capabilities, which you can then access from a visualization tool like Grafana.&lt;/p&gt; &lt;h2&gt;Generate an example combined dashboard&lt;/h2&gt; &lt;p&gt;Let&amp;#8217;s walk through an example using the &lt;a target="_blank" rel="nofollow" href="https://github.com/jamesfalkner/microprofile-grafana"&gt;MicroProfile Metrics Generator&amp;#8217;s repository&lt;/a&gt;. You will need the following tools to complete this example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://curl.haxx.se/"&gt;curl&lt;/a&gt; &amp;#8211; For accessing the application&amp;#8217;s metrics.&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://git-scm.com/"&gt;Git&lt;/a&gt; &amp;#8211; To clone the &lt;a target="_blank" rel="nofollow" href="https://github.com/jamesfalkner/microprofile-grafana"&gt;repo&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://grafana.com/"&gt;Grafana&lt;/a&gt; &amp;#8211; To visualize the dashboard.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java&lt;/a&gt; &amp;#8211; To run the sample application.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/category/node-js/"&gt;Node.js&lt;/a&gt; &amp;#8211; To run the generator&amp;#8217;s web front end.&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://prometheus.io/"&gt;Prometheus&lt;/a&gt; &amp;#8211; To scrape metrics from the application.&lt;/li&gt; &lt;/ul&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: If you want to try out an already-running version, check out the SmallRye &lt;a target="_blank" rel="nofollow" href="https://microprofile-grafana.quarkusdemos.net"&gt;MicroProfile Grafana Dashboard Generator&lt;/a&gt; for an easy test drive.&lt;/p&gt; &lt;h3&gt;Run the MicroProfile Metrics Generator&lt;/h3&gt; &lt;p&gt;Start by following the &lt;a target="_blank" rel="nofollow" href="https://github.com/jamesfalkner/microprofile-grafana/blob/master/README.md"&gt;instructions in the README&lt;/a&gt; to get the MicroProfile Metrics Generator up and running. The MicroProfile Metrics Generator repository includes a &lt;a target="_blank" rel="nofollow" href="https://github.com/jamesfalkner/microprofile-grafana/tree/master/sampleapp"&gt;sample application&lt;/a&gt; that you can use to generate metrics. It&amp;#8217;s a simple &lt;a href="https://developers.redhat.com/products/quarkus"&gt;Quarkus&lt;/a&gt; application with a few added metrics. You can run the application from the repo&amp;#8217;s root directory with &lt;code&gt;mvn quarkus:dev -f sampleapp&lt;/code&gt;. Quarkus includes the &lt;a target="_blank" rel="nofollow" href="https://smallrye.io/"&gt;SmallRye MicroProfile implementation&lt;/a&gt;. You can learn more about it by reading the &lt;a target="_blank" rel="nofollow" href="https://quarkus.io/guides/microprofile-metrics"&gt;&lt;i&gt;Quarkus MicroProfile Metrics&lt;/i&gt; guide&lt;/a&gt;.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: The end goal is to produce a JSON dashboard from JSON metadata, so what better tool to use than &lt;a target="_blank" rel="nofollow" href="https://jsonnet.org/"&gt;Jsonnet&lt;/a&gt;? You could do JSON-to-JSON mapping with Java, &lt;a href="https://developers.redhat.com/blog/category/javascript/"&gt;JavaScript&lt;/a&gt;, or another language, but Jsonnet is well suited for the task. The Grafonnet library just makes it less painful to generate Grafana JSON.&lt;/p&gt; &lt;h3&gt;Generate a Grafana metrics dashboard&lt;/h3&gt; &lt;p&gt;This example assumes you have a MicroProfile app with MicroProfile Metrics enabled, that is running on &lt;code&gt;localhost:8080&lt;/code&gt;. You also have the MicroProfile Metrics Generator running on &lt;code&gt;localhost:8081&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To see the application&amp;#8217;s raw metrics, enter:&lt;/p&gt; &lt;pre&gt;$ curl http://localhost:8080/metrics&lt;/pre&gt; &lt;p&gt;Next, generate the Metrics metadata:&lt;/p&gt; &lt;pre&gt;$ curl -X OPTIONS -H "Accept: application/json" http://localhost:8080/metrics&lt;/pre&gt; &lt;p&gt;Now, access the generator front end at &lt;code&gt;http://localhost:8081&lt;/code&gt;. Copy and paste the previous command&amp;#8217;s output into the left box, and click &lt;b&gt;Generate&lt;/b&gt;. You will see something like the screenshot in Figure 1.&lt;/p&gt; &lt;div id="attachment_740967" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/dash.png"&gt;&lt;img aria-describedby="caption-attachment-740967" class="wp-image-740967 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/dash-1024x534.png" alt="A screenshot of the MicroProfile Metrics Generator user interface. It shows one box for pasting in curl output and one box for viewing the resulting Grafana dashboard." width="640" height="334" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/dash-1024x534.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/dash-300x156.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/dash-768x401.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-740967" class="wp-caption-text"&gt;Figure 1: View the application metrics on the generator&amp;#8217;s front end.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Import the Grafana dashboard with Prometheus&lt;/h3&gt; &lt;p&gt;Note that before you proceed, you must have Grafana configured with a Prometheus data source. Prometheus, in turn, must be configured to scrape your application&amp;#8217;s &lt;code&gt;/metrics&lt;/code&gt; endpoint. If you don&amp;#8217;t have Prometheus and Grafana running, you can use the example scripts, which require that you run them with &lt;code&gt;docker&lt;/code&gt; (see the &lt;a target="_blank" rel="nofollow" href="https://github.com/jamesfalkner/microprofile-grafana/blob/master/README.md"&gt;README&lt;/a&gt; for more details).&lt;/p&gt; &lt;p&gt;Now to import the dashboard. Copy the output on the generator&amp;#8217;s right side (Figure 1). Then, open Grafana and paste the content into the &lt;b&gt;Grafana Dashboard Import&lt;/b&gt; box (see the &lt;a target="_blank" rel="nofollow" href="https://github.com/jamesfalkner/microprofile-grafana/blob/master/README.md"&gt;README&lt;/a&gt; for more details). Alternatively, you can click the &lt;b&gt;Download&lt;/b&gt; button on the left side of the generator&amp;#8217;s screen to download the &lt;code&gt;.json&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;Figure 2 shows an example of a nice-looking Grafana dashboard that I generated using this tool:&lt;/p&gt; &lt;div id="attachment_740977" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/grafana.png"&gt;&lt;img aria-describedby="caption-attachment-740977" class="wp-image-740977 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/grafana-1024x411.png" alt="A Grafana dashboard for MicroProfile apps." width="640" height="257" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/grafana-1024x411.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/grafana-300x120.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/grafana-768x308.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/grafana.png 1571w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-740977" class="wp-caption-text"&gt;Figure 2: A Grafana dashboard for MicroProfile apps.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You can also generate dashboards using the generator&amp;#8217;s &lt;code&gt;/processRaw&lt;/code&gt; endpoint. Here&amp;#8217;s an example:&lt;/p&gt; &lt;pre&gt;$ curl -X OPTIONS -H "Accept: application/json" http://localhost:8080/metrics | \ curl -d @- http://localhost:8081/processRaw &lt;/pre&gt; &lt;h2&gt;Implementation details&lt;/h2&gt; &lt;p&gt;The magic of the MicroProfile Metrics Generator &lt;a target="_blank" rel="nofollow" href="https://github.com/jamesfalkner/microprofile-grafana/blob/master/dashboards/microprofile.jsonnet"&gt;is written in Jsonnet syntax&lt;/a&gt;, along with other typical programming constructs to get the job done. Jsonnet &amp;#8220;consumes&amp;#8221; JSON files that can be instrumented with programmatic expressions, which produces another JSON object.&lt;/p&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;pre&gt;$ echo '["hello world"]' | jsonnet - [ "hello world" ] &lt;/pre&gt; &lt;p&gt;Nothing exciting there; but this is more interesting:&lt;/p&gt; &lt;pre&gt;$ echo '[i for i in [1,2,3]]' | jsonnet - [ 1, 2, 3 ] &lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: Interesting &lt;a target="_blank" rel="nofollow" href="https://jsonnet.org/articles/design.html"&gt;design choices&lt;/a&gt; (like being hermetic) make it a tad more difficult to dynamically consume JSON with Jsonnet. Its &lt;a target="_blank" rel="nofollow" href="https://jsonnet.org/ref/spec.html"&gt;syntax&lt;/a&gt; takes some adjustment, as well.&lt;/p&gt; &lt;p&gt;Notice the &lt;code&gt;for&lt;/code&gt; loop. You can use lots of other programmatic elements to generate the JSON end object. Everything else is pretty standard: You just need a &lt;a href="https://developers.redhat.com/blog/category/node-js/"&gt;Node.js&lt;/a&gt; runtime and the tools to get Prometheus and Grafana running locally.&lt;/p&gt; &lt;h2&gt;Wrap up&lt;/h2&gt; &lt;p&gt;The MicroProfile Metrics Generator lets you dynamically generate Grafana dashboards for all of the metrics in a MicroProfile application. It&amp;#8217;s useful for demos or for generating metrics for your production apps. You can also use Prometheus and Grafana to set up alerts if your app is misbehaving. If you have ideas for improving the generator, I&amp;#8217;d love to hear them.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fgenerate-automated-grafana-metrics-dashboards-for-microprofile-apps%2F&amp;#38;linkname=Generate%20automated%20Grafana%20metrics%20dashboards%20for%20MicroProfile%20apps" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fgenerate-automated-grafana-metrics-dashboards-for-microprofile-apps%2F&amp;#38;linkname=Generate%20automated%20Grafana%20metrics%20dashboards%20for%20MicroProfile%20apps" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fgenerate-automated-grafana-metrics-dashboards-for-microprofile-apps%2F&amp;#38;linkname=Generate%20automated%20Grafana%20metrics%20dashboards%20for%20MicroProfile%20apps" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fgenerate-automated-grafana-metrics-dashboards-for-microprofile-apps%2F&amp;#38;linkname=Generate%20automated%20Grafana%20metrics%20dashboards%20for%20MicroProfile%20apps" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fgenerate-automated-grafana-metrics-dashboards-for-microprofile-apps%2F&amp;#38;linkname=Generate%20automated%20Grafana%20metrics%20dashboards%20for%20MicroProfile%20apps" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fgenerate-automated-grafana-metrics-dashboards-for-microprofile-apps%2F&amp;#38;linkname=Generate%20automated%20Grafana%20metrics%20dashboards%20for%20MicroProfile%20apps" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fgenerate-automated-grafana-metrics-dashboards-for-microprofile-apps%2F&amp;#38;linkname=Generate%20automated%20Grafana%20metrics%20dashboards%20for%20MicroProfile%20apps" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fgenerate-automated-grafana-metrics-dashboards-for-microprofile-apps%2F&amp;#038;title=Generate%20automated%20Grafana%20metrics%20dashboards%20for%20MicroProfile%20apps" data-a2a-url="https://developers.redhat.com/blog/2020/07/10/generate-automated-grafana-metrics-dashboards-for-microprofile-apps/" data-a2a-title="Generate automated Grafana metrics dashboards for MicroProfile apps"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/10/generate-automated-grafana-metrics-dashboards-for-microprofile-apps/"&gt;Generate automated Grafana metrics dashboards for MicroProfile apps&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/nrCD7fqAq3s" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Grafana is an awesome visualization tool for seeing real-time metrics from your applications, and you can combine it with MicroProfile and similar tools to create one dashboard for multiple projects. Different projects use different names for metrics, however, so it is often necessary (and tedious) to handcraft the metrics for each project. Moreover, each project [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/10/generate-automated-grafana-metrics-dashboards-for-microprofile-apps/"&gt;Generate automated Grafana metrics dashboards for MicroProfile apps&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/10/generate-automated-grafana-metrics-dashboards-for-microprofile-apps/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">740217</post-id><dc:creator>James Falkner</dc:creator><dc:date>2020-07-10T07:00:40Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/10/generate-automated-grafana-metrics-dashboards-for-microprofile-apps/</feedburner:origLink></entry><entry><title>Performance and usability enhancements in Red Hat CodeReady Workspaces 2.2</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7refAlSDfQA/" /><category term="Developer Tools" /><category term="Kubernetes" /><category term="Operator" /><category term="apache maven" /><category term="CodeReady Workspaces" /><category term="Kubernetes cpu limits" /><category term="MongoDB" /><category term="openshift" /><author><name>Parag Dave</name></author><id>https://developers.redhat.com/blog/?p=739337</id><updated>2020-07-10T07:00:16Z</updated><published>2020-07-10T07:00:16Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/products/codeready-workspaces/overview"&gt;Red Hat CodeReady Workspaces 2.2&lt;/a&gt; is now available. For the improvements in this release, we focused on performance and configuration, plus updating CodeReady Workspaces 2.2 to use newer versions of the most popular runtimes and stacks. We also added the ability to allocate only the CPU that you need for IDE plugins, and we introduced a new diagnostic feature that lets you start up a workspace in debug mode.&lt;/p&gt; &lt;p&gt;CodeReady Workspaces 2.2 is available on &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/2.0/html/installation_guide/installing-codeready-workspaces-on-openshift-3-using-the-operator_crw?extIdCarryOver=true&amp;#38;sc_cid=701f2000000RmAOAA0"&gt;OpenShift 3.11&lt;/a&gt; and &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/2.1/html/installation_guide/installing-codeready-workspaces-on-ocp-4?extIdCarryOver=true&amp;#38;sc_cid=701f2000000RmAOAA0#installing-the-codeready-workspaces-operator-in-openshift-4-web-console_installing-codeready-workspaces-on-openshift-4-from-operatorhub"&gt;OpenShift 4.3&lt;/a&gt; and higher, including tech-preview support for OpenShift 4.5.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: Based on &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/che/getting-started/cloud/?sc_cid=701f2000000RtqCAAS"&gt;Eclipse Che&lt;/a&gt;, CodeReady Workspaces is a &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;-native developer environment that supports cloud-native development.&lt;/p&gt; &lt;p&gt;&lt;span id="more-739337"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Faster workspace loading&lt;/h2&gt; &lt;p&gt;Every time you start a workspace, the underlying cluster fetches and deploys all of the remote images that comprise that workspace. This activity can result in a longer wait time before the workspace is available.&lt;/p&gt; &lt;p&gt;In CodeReady Workspaces 2.2, we&amp;#8217;ve added a new, optional &lt;a href="https://developers.redhat.com/topics/kubernetes/operators/"&gt;Operator&lt;/a&gt; that reduces the time required to start your workspace. The Image Puller Operator pre-pulls the remote images designated for your workspace, which results in shorter wait times. All you need to do is install the Image Puller Operator on the same cluster where you are running CodeReady Workspaces. Figure 1 shows the new Operator in the &lt;a target="_blank" rel="nofollow" href="https://operatorhub.io/"&gt;OperatorHub&lt;/a&gt;.&lt;/p&gt; &lt;div id="attachment_739357" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image5.png"&gt;&lt;img aria-describedby="caption-attachment-739357" class="wp-image-739357 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image5-1024x474.png" alt="A screenshot showing the new Operator in the Operator Hub." width="640" height="296" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image5-1024x474.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/image5-300x139.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/image5-768x356.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-739357" class="wp-caption-text"&gt;Figure 1: The Image Puller Operator in the Operator Hub.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 2 shows the installation page with instructions for installing the Image Puller Operator.&lt;/p&gt; &lt;div id="attachment_739367" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image2-1.png"&gt;&lt;img aria-describedby="caption-attachment-739367" class="wp-image-739367 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image2-1-1024x478.png" alt="A screenshot of the installation page for the Image Puller Operator." width="640" height="299" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image2-1-1024x478.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/image2-1-300x140.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/image2-1-768x359.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-739367" class="wp-caption-text"&gt;Figure 2: Install the Image Puller Operator.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Support for multiple devfile registries&lt;/h2&gt; &lt;p&gt;It is now possible to configure CodeReady Workspaces with multiple devfile registries. Using this feature, organizations can provide multiple sources of their curated devfiles for developer workspaces. Figure 3 shows a devfile registry configured in the CodeReady Workspaces cluster.&lt;/p&gt; &lt;div id="attachment_739377" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image1-1.png"&gt;&lt;img aria-describedby="caption-attachment-739377" class="wp-image-739377 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image1-1-1024x393.png" alt="A screenshot of the devfile registry in the CodeReady Workspaces cluster." width="640" height="246" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image1-1-1024x393.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/image1-1-300x115.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/image1-1-768x295.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-739377" class="wp-caption-text"&gt;Figure 3: The devfile registry setting in the CR for CodeReady Workspaces instance.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 4 shows a listing of devfiles available for creating a custom workspace in CodeReady Workspaces.&lt;/p&gt; &lt;div id="attachment_739387" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image6-1.gif"&gt;&lt;img aria-describedby="caption-attachment-739387" class="wp-image-739387 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image6-1-1024x485.gif" alt="A screenshot of the page to create a custom workspace in CodeReady Workspaces 2.2." width="640" height="303" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image6-1-1024x485.gif 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/image6-1-300x142.gif 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/image6-1-768x364.gif 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-739387" class="wp-caption-text"&gt;Figure 4: List of devfiles across all of the registries specified in the CR for the CodeReady Workspaces instance.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Deprecated &lt;code&gt;selfSignedCert&lt;/code&gt; setting in CR definition&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces now automatically detects if the router certificate is self-signed or not. If the certificate is found to be self-signed, it is propagated to the CodeReady Workspaces server and its components. As a result, the &lt;code&gt;selfSignedCert&lt;/code&gt; setting in the CR for CodeReady Workspaces instance is now ignored and does not need to be specified.&lt;/p&gt; &lt;h2&gt;Updates to core runtimes and stacks&lt;/h2&gt; &lt;p&gt;We also updated the set of devfiles that are provided with CodeReady Workspaces to more recent versions. CodeReady Workspaces 2.2 features updates to the following runtime images and stacks:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Maven 3.6&lt;/b&gt;: This update includes improvements to memory and CPU consumption.&lt;/li&gt; &lt;li&gt;&lt;b&gt;MongoDB 3.6&lt;/b&gt;: This update includes enhancements related to security and stability.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Code samples&lt;/b&gt;: We updated various code samples to fix issues related to usage.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Set CPU limits on IDE plugins&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces now lets you assign CPU limits to your IDE plugins with &lt;code&gt;cpuLimit&lt;/code&gt; and &lt;code&gt;cpuRequest&lt;/code&gt;. Similar to the existing capability that allows developers to allocate memory limits, this feature lets you declare system limits for plugins. Setting CPU limits can prevent the workspace pod from getting overloaded. Figure 5 shows a devfile with the new option to set CPU limits for IDE plugins.&lt;/p&gt; &lt;div id="attachment_739397" style="width: 287px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image3.png"&gt;&lt;img aria-describedby="caption-attachment-739397" class="wp-image-739397 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image3.png" alt="A screenshot of the config file with the new option to set CPU limits for IDE plugins." width="277" height="468" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image3.png 277w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/image3-178x300.png 178w" sizes="(max-width: 277px) 100vw, 277px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-739397" class="wp-caption-text"&gt;Figure 5: Set CPU limits for IDE plugins.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Run your workspace in debug mode&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces now allows you to run your workspace in debug mode, which means that you can view the logs while the workspace is starting up. Having access to the logs helps with troubleshooting issues encountered during startup. Figure 6 shows the new option to start a workspace in debug mode.&lt;/p&gt; &lt;div id="attachment_739407" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image4.gif"&gt;&lt;img aria-describedby="caption-attachment-739407" class="wp-image-739407 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image4-1024x529.gif" alt="A screenshot of the startup screen with the new option to restart in debug mode." width="640" height="331" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/image4-1024x529.gif 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/image4-300x155.gif 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/image4-768x397.gif 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-739407" class="wp-caption-text"&gt;Figure 6: Start your workspace in debug mode.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Get CodeReady Workspaces 2.2 today!&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces 2.2 is available now on OpenShift 3.11 and OpenShift 4.3 and higher:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If you are using OpenShift 3.11, follow the &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/2.0/html/installation_guide/installing-codeready-workspaces-on-openshift-3-using-the-operator_crw"&gt;OpenShift 3.11 installation instructions&lt;/a&gt; to install CodeReady Workspaces 2.2.&lt;/li&gt; &lt;li&gt;If you are using OpenShift 4.3 or higher, you can install CodeReady Workspaces 2.2 directly from the OpenShift OperatorHub. Follow the &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/2.1/html/installation_guide/installing-codeready-workspaces-on-ocp-4#installing-the-codeready-workspaces-operator-in-openshift-4-web-console_installing-codeready-workspaces-on-openshift-4-from-operatorhub"&gt;OpenShift 4.3 documentation&lt;/a&gt; for this procedure.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Additional resources&lt;/h2&gt; &lt;p&gt;For developers new to CodeReady Workspaces, we recommend these additional resources:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Download the Red Hat &lt;a href="https://developers.redhat.com/products/codeready-workspaces/download"&gt;CodeReady Workspaces command-line interface&lt;/a&gt; (CLI)&lt;/li&gt; &lt;li&gt;Visit the Red Hat &lt;a href="https://developers.redhat.com/products/codeready-workspaces"&gt;CodeReady Workspaces product page&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Visit the &lt;a href="https://developers.redhat.com/products/codeready-workspaces/getting-started"&gt;Getting Started with Red Hat CodeReady Workspaces&lt;/a&gt; page.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fperformance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2%2F&amp;#38;linkname=Performance%20and%20usability%20enhancements%20in%20Red%20Hat%20CodeReady%20Workspaces%202.2" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fperformance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2%2F&amp;#38;linkname=Performance%20and%20usability%20enhancements%20in%20Red%20Hat%20CodeReady%20Workspaces%202.2" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fperformance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2%2F&amp;#38;linkname=Performance%20and%20usability%20enhancements%20in%20Red%20Hat%20CodeReady%20Workspaces%202.2" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fperformance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2%2F&amp;#38;linkname=Performance%20and%20usability%20enhancements%20in%20Red%20Hat%20CodeReady%20Workspaces%202.2" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fperformance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2%2F&amp;#38;linkname=Performance%20and%20usability%20enhancements%20in%20Red%20Hat%20CodeReady%20Workspaces%202.2" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fperformance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2%2F&amp;#38;linkname=Performance%20and%20usability%20enhancements%20in%20Red%20Hat%20CodeReady%20Workspaces%202.2" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fperformance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2%2F&amp;#38;linkname=Performance%20and%20usability%20enhancements%20in%20Red%20Hat%20CodeReady%20Workspaces%202.2" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F10%2Fperformance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2%2F&amp;#038;title=Performance%20and%20usability%20enhancements%20in%20Red%20Hat%20CodeReady%20Workspaces%202.2" data-a2a-url="https://developers.redhat.com/blog/2020/07/10/performance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2/" data-a2a-title="Performance and usability enhancements in Red Hat CodeReady Workspaces 2.2"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/10/performance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2/"&gt;Performance and usability enhancements in Red Hat CodeReady Workspaces 2.2&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7refAlSDfQA" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat CodeReady Workspaces 2.2 is now available. For the improvements in this release, we focused on performance and configuration, plus updating CodeReady Workspaces 2.2 to use newer versions of the most popular runtimes and stacks. We also added the ability to allocate only the CPU that you need for IDE plugins, and we introduced [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/10/performance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2/"&gt;Performance and usability enhancements in Red Hat CodeReady Workspaces 2.2&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/10/performance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">739337</post-id><dc:creator>Parag Dave</dc:creator><dc:date>2020-07-10T07:00:16Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/10/performance-and-usability-enhancements-in-red-hat-codeready-workspaces-2-2/</feedburner:origLink></entry><entry><title>Behavior is easy, state is hard: Tame inconsistent state in your Java code</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/W7QxniquATI/" /><category term="DevNation" /><category term="Java" /><category term="Linux" /><category term="VS Code" /><category term="debug java" /><category term="eclipse collections" /><category term="immutable code" /><category term="JPA entity" /><author><name>Edson Yanaga</name></author><id>https://developers.redhat.com/blog/?p=729387</id><updated>2020-07-09T07:00:05Z</updated><published>2020-07-09T07:00:05Z</published><content type="html">&lt;p&gt;DevNation Tech Talks are hosted by the Red Hat technologists who create our products. These sessions include real solutions plus code and sample projects to help you get started. In this talk, you&amp;#8217;ll learn the root cause of common inconsistent state-related bugs in your production Java code—and how to solve them—from &lt;a href="https://developers.redhat.com/blog/author/yanaga/"&gt;Edson Yanaga&lt;/a&gt; and &lt;a href="https://developers.redhat.com/blog/author/burrsutter/"&gt;Burr Sutter&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;NullPointerException on a field that was never supposed to be null? A negative value on an &amp;#8220;always positive&amp;#8221; field? Ever wondered why these bugs happen? You’re not alone. Watch this session to learn the root cause of these common bugs in production Java code, and how to solve them by applying some interesting techniques in your business code.&lt;/p&gt; &lt;p&gt;Watch the entire talk:&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/nuu9Ium4ohM?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h2&gt;Learn more&lt;/h2&gt; &lt;p&gt;Join us at an &lt;a href="https://developers.redhat.com/events/"&gt;upcoming developer event&lt;/a&gt;, and see our collection of &lt;a href="https://developers.redhat.com/devnation/?page=0"&gt;past DevNation Tech Talks&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F09%2Fbehavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code%2F&amp;#38;linkname=Behavior%20is%20easy%2C%20state%20is%20hard%3A%20Tame%20inconsistent%20state%20in%20your%20Java%20code" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F09%2Fbehavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code%2F&amp;#38;linkname=Behavior%20is%20easy%2C%20state%20is%20hard%3A%20Tame%20inconsistent%20state%20in%20your%20Java%20code" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F09%2Fbehavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code%2F&amp;#38;linkname=Behavior%20is%20easy%2C%20state%20is%20hard%3A%20Tame%20inconsistent%20state%20in%20your%20Java%20code" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F09%2Fbehavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code%2F&amp;#38;linkname=Behavior%20is%20easy%2C%20state%20is%20hard%3A%20Tame%20inconsistent%20state%20in%20your%20Java%20code" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F09%2Fbehavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code%2F&amp;#38;linkname=Behavior%20is%20easy%2C%20state%20is%20hard%3A%20Tame%20inconsistent%20state%20in%20your%20Java%20code" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F09%2Fbehavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code%2F&amp;#38;linkname=Behavior%20is%20easy%2C%20state%20is%20hard%3A%20Tame%20inconsistent%20state%20in%20your%20Java%20code" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F09%2Fbehavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code%2F&amp;#38;linkname=Behavior%20is%20easy%2C%20state%20is%20hard%3A%20Tame%20inconsistent%20state%20in%20your%20Java%20code" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F09%2Fbehavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code%2F&amp;#038;title=Behavior%20is%20easy%2C%20state%20is%20hard%3A%20Tame%20inconsistent%20state%20in%20your%20Java%20code" data-a2a-url="https://developers.redhat.com/blog/2020/07/09/behavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code/" data-a2a-title="Behavior is easy, state is hard: Tame inconsistent state in your Java code"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/09/behavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code/"&gt;Behavior is easy, state is hard: Tame inconsistent state in your Java code&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/W7QxniquATI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;DevNation Tech Talks are hosted by the Red Hat technologists who create our products. These sessions include real solutions plus code and sample projects to help you get started. In this talk, you&amp;#8217;ll learn the root cause of common inconsistent state-related bugs in your production Java code—and how to solve them—from Edson Yanaga and Burr [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/09/behavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code/"&gt;Behavior is easy, state is hard: Tame inconsistent state in your Java code&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/09/behavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">729387</post-id><dc:creator>Edson Yanaga</dc:creator><dc:date>2020-07-09T07:00:05Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/09/behavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code/</feedburner:origLink></entry><entry><title>This Week in JBoss - 9 July 2020: Over the (j)cliff!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/FwtjMxdJi1o/weekly-2020-07-09.html" /><category term="ansible" scheme="searchisko:content:tags" /><category term="codeready" scheme="searchisko:content:tags" /><category term="EAP" scheme="searchisko:content:tags" /><category term="eap-xp" scheme="searchisko:content:tags" /><category term="editorial" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="infinispan" scheme="searchisko:content:tags" /><category term="jcliff" scheme="searchisko:content:tags" /><category term="jgroups" scheme="searchisko:content:tags" /><category term="microprofile" scheme="searchisko:content:tags" /><category term="microservice" scheme="searchisko:content:tags" /><category term="netty" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><category term="widlfy" scheme="searchisko:content:tags" /><author><name>Romain Pelisse 2020-07-09</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_9_july_2020_over_the_j_cliff</id><updated>2020-07-09T00:00:00Z</updated><published>2020-07-09T00:00:00Z</published><content type="html">&lt;article class="" data-tags="quarkus, editorial, infinispan, jgroups, netty, codeready, serverless, microservice, ansible, jcliff, widlfy, eap, eap-xp, microprofile"&gt; &lt;h1&gt;This Week in JBoss - 9 July 2020: Over the (j)cliff!&lt;/h1&gt; &lt;p class="preamble"&gt;&lt;/p&gt;&lt;p&gt;Welcome to another installment of our JBoss Editorial! Summer has begun, well, at least for those of you readers living in the northern hemisphere :)! So let’s enjoy it by giving some nice, interesting and exciting reading material to enjoy while resting in the sun (with your mask, #staysafe!).&lt;/p&gt;&lt;p&gt;&lt;/p&gt; &lt;div class="sect1"&gt; &lt;h2 id="_infinispan_11"&gt;Infinispan 11!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;It’s out! The new major version of Infinispan is here! Please go and check out &lt;a href="https://infinispan.org/blog/2020/07/03/infinispan-11/"&gt;Infinispan 11&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_jgroups_new_netty_transport"&gt;JGroups: new Netty transport!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;I’ve said it many times, JGroups is an incredible piece of software. The power and the flexibility of the frameworks always dazzle me, so I’m very excited about this &lt;a href="http://belaban.blogspot.com/2020/06/new-netty-transport.html"&gt;new netty transport&lt;/a&gt; getting into it!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_ansible_collection_for_jcliff"&gt;Ansible Collection for JCliff&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;It’s a pet project of mine that I have already mentioned a few months ago: Andrew Block, Roel Holzmans and I have been working on integrating further Widlfy (and EAP) into Ansible, in order to ensure that one can use the tool to fine-tune as much as possible the JEE server’s configuration. We leverage an existing Open Source Java tool called &lt;a href="https://github.com/bserdar/jcliff"&gt;JCliff&lt;/a&gt; to just that.&lt;/p&gt; &lt;p&gt;Last year, we released a role, already available in &lt;a href="https://galaxy.ansible.com/redhat-cop/jcliff"&gt;Ansible Galaxy&lt;/a&gt;, to integrate JCliff into Ansible. However, since then, the Ansible community released a new format to distribute extension, called Ansible Collection. We therefore decide to migrate our content there and we finally released, just this week, a very first version: &lt;a href="https://galaxy.ansible.com/redhat/jcliff"&gt;Ansible Collection for JCliff 0.0.1&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;So, please check it out! All you need to do is $ ansible-galaxy collection install redhat.jcliff:0.0.1 and, voilà, the collection is installed and you can start to &lt;a href="https://github.com/ansible-middleware/ansible_collections_jcliff_demo"&gt;play with it&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Oh, almost forgot! This release also supports, on tops of Linux, MacOSX with homebrew! (Windows using Chocolatey is coming next).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_serverless_and_microservice"&gt;Serverless and Microservice&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;As alluring as “serverless” is, it does, like any other technology, come with its own challenges. Follow Christina as she goes through the importance of having the proper infrastructure to support your “serverless” apps in this well thought out blog entry: &lt;a href="http://wei-meilin.blogspot.com/2020/07/serverless-integration-components.html"&gt;Serverless Integration Components&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Follow this first read, you may want to take a look at this other article on &lt;a href="http://www.ofbizian.com/2020/07/operators-and-sidecars-are-new-model.html"&gt;operators and sidecars are the new model&lt;/a&gt;, which also discuss similar concerns.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_microprofile"&gt;Microprofile&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;With the release JBoss EAP XP, there are a lot of opportunities to develop supported microprofile application. So if you want to explore how to develop such an application, please follow &lt;a href="https://developers.redhat.com/blog/author/ehugonne/"&gt;Emmanuel Hugonnet&lt;/a&gt;’s tutorial on &lt;a href="https://developers.redhat.com/blog/2020/07/01/develop-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-expansion-pack-1-0-with-red-hat-codeready-workspaces/"&gt;Develop Eclipse MicroProfile applications on Red Hat JBoss Enterprise Application Platform Expansion Pack 1.0 with Red Hat CodeReady Workspaces&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_decafquarkus_workshops_automated_with_ansible"&gt;Decaf—Quarkus Workshops automated with Ansible&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;Yeah, I know, we just talked about Ansible! Where is my Java stuff you are rightly asking. Well, as you’ll see Ansible, while being Python, plays well with Java software, as demonstrated by this article on &lt;a href="https://developers.redhat.com/blog/2020/07/03/automate-workshop-setup-with-ansible-playbooks-and-codeready-workspaces/"&gt;automate workshop setup with Ansible playbooks and CodeReady workspaces&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;That’s all for another edition of the JBoss Editorial, please join us again for more exciting development from the JBoss Communities.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="author"&gt; &lt;pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/romain-pelisse 2020-07-09.png"&gt;&lt;/pfe-avatar&gt; &lt;span&gt;Romain Pelisse 2020-07-09&lt;/span&gt; &lt;/div&gt;&lt;/article&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/FwtjMxdJi1o" height="1" width="1" alt=""/&gt;</content><summary>This Week in JBoss - 9 July 2020: Over the (j)cliff! Welcome to another installment of our JBoss Editorial! Summer has begun, well, at least for those of you readers living in the northern hemisphere :)! So let’s enjoy it by giving some nice, interesting and exciting reading material to enjoy while resting in the sun (with your mask, #staysafe!). Infinispan 11! It’s out! The new major version of I...</summary><dc:creator>Romain Pelisse 2020-07-09</dc:creator><dc:date>2020-07-09T00:00:00Z</dc:date><feedburner:origLink>https://www.jboss.org/posts/weekly-2020-07-09.html</feedburner:origLink></entry><entry><title>Serverless Integration Components</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/LzcY6M-wUpI/serverless-integration-components.html" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="Camel K" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_christinalineng" scheme="searchisko:content:tags" /><category term="Kafka" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Red Hat Integration" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><author><name>CHRISTINA の J老闆</name></author><id>searchisko:content:id:jbossorg_blog-serverless_integration_components</id><updated>2020-07-08T18:16:15Z</updated><published>2020-07-08T18:16:00Z</published><content type="html">&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Serverless should not be optional, but instead it should be there for all cloud native environments. Of course not all applications should adopt serverless. But if you look closer, the majority of the modules in the application are stateless, often stash away in the corner, that are needed occasionally. Some need to to handle loads that are highly fluctuated. These are the perfect candidates to run as serverless.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;b id="docs-internal-guid-507b9077-7fff-c3a7-b440-490f6d1ce602" style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Serverless let developers focus on code instead of worrying about infrastructural setups. To provide this environment, along with proper monitoring and reliable backbone to handle large throughput of events.&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;This is what Serverless Integration (Kubernetes based) looks like,&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Everything is based on containers. Why care about the underlying technologies for serverless ? Shouldn’t it all be transparent? If your goal is to host or build on a hybrid/multi cloud that is locked-in free from all vendors, it means there are NOT just developers involved in the picture. You will eventually need cooperation between teams and work with all sorts of applications such as traditional services and microservices. Having unification and standardization technology, will flatten the learning curve for teams to adopt new kinds of applications and make maintenance less complex.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;From the development to the platform everything should seamlessly work together, and being able to automate and manage with ease.&lt;/span&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;a href="http://4.bp.blogspot.com/-tuvAdyWiSZ0/XwYGiy2kO5I/AAAAAAAAGJY/GhjaTBFOnPkmCkk4q8539LU0sm6mG_GTQCK4BGAYYCw/s1600/Serverless%2BArchitecture.png" imageanchor="1"&gt;&lt;img border="0" height="480" src="https://4.bp.blogspot.com/-tuvAdyWiSZ0/XwYGiy2kO5I/AAAAAAAAGJY/GhjaTBFOnPkmCkk4q8539LU0sm6mG_GTQCK4BGAYYCw/s640/Serverless%2BArchitecture.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 14.666666984558105px; white-space: pre-wrap;"&gt;Let’s break down all the elements.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 14.666666984558105px; white-space: pre-wrap;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The Platform:&amp;nbsp; A Platform that provides full infrastructure and platform management with self service capability, service discovery and applying container policy and compliance.&lt;/span&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;a href="http://1.bp.blogspot.com/-f-MOCe2o5PM/XwYHLrh2DOI/AAAAAAAAGJw/EdUEGsCZRuM_El9ynuGLwfwVy5DFO1KXQCK4BGAYYCw/s1600/Platform.png" imageanchor="1"&gt;&lt;img border="0" height="236" src="https://1.bp.blogspot.com/-f-MOCe2o5PM/XwYHLrh2DOI/AAAAAAAAGJw/EdUEGsCZRuM_El9ynuGLwfwVy5DFO1KXQCK4BGAYYCw/s640/Platform.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The Serverless Platform:&amp;nbsp; Handles autoscaling of the functions/application. Abstraction of the underlying infrastructure.&amp;nbsp; Setup revision of the deployments for easy rollback. And unify events for the publishers and consumers.&lt;/span&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;a href="http://1.bp.blogspot.com/-POmUdPB4iO0/XwYLzDvgReI/AAAAAAAAGJ8/FAablz7OfCkwrn-aZa78YGu3VsyM1BR_ACK4BGAYYCw/s1600/03-serverless.png" imageanchor="1"&gt;&lt;img border="0" height="344" src="https://1.bp.blogspot.com/-POmUdPB4iO0/XwYLzDvgReI/AAAAAAAAGJ8/FAablz7OfCkwrn-aZa78YGu3VsyM1BR_ACK4BGAYYCw/s640/03-serverless.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The Event Mesh: Events are published to the mesh, and to the distributed consumers. The basic structure of the events are consistent and should be portable among platforms. All the events are flexible, governed and pushed quickly.&amp;nbsp; Powered by a reliable streaming network, it helps to store the streams of event for tracing, auditing or later replay for big data processing/ AI/ML datasets.&lt;/span&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;a href="http://2.bp.blogspot.com/-qaNAYtY-4L0/XwYMFqH3yKI/AAAAAAAAGKI/_LZGi4F7ZSUqWKhtP0fB-PJLVVikEeVVgCK4BGAYYCw/s1600/04-eventmesh.png" imageanchor="1"&gt;&lt;img border="0" height="360" src="https://2.bp.blogspot.com/-qaNAYtY-4L0/XwYMFqH3yKI/AAAAAAAAGKI/_LZGi4F7ZSUqWKhtP0fB-PJLVVikEeVVgCK4BGAYYCw/s640/04-eventmesh.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The Integration Functions:&amp;nbsp; Typical characteristics of serverless integration include, small, lightweight, stateless and event driven. These characteristics allow the application to be elastic, to tackle the under/over provisioning that we face today. From the operation side these are the&amp;nbsp; applications that cease and quickly spin up after being triggered by events. For better resource optimization. And for developers&amp;nbsp; it is a simple modular code snippet that they write and gets automatically spun up. So they can focus on code instead of deployment related issues. And Integration functions are the application that typically handles routing, transformation of data payload in events, and also other composing and orchestrating problems.&amp;nbsp; Also commonly used for connecting to external services, and bridges between systems.&lt;/span&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;a href="http://1.bp.blogspot.com/-BiqNnuQjjQo/XwYMaOxY6gI/AAAAAAAAGKU/JnMtTp91tx4tjOdIvPC1FtMIcVAwDCipwCK4BGAYYCw/s1600/05-functions.png" imageanchor="1"&gt;&lt;img border="0" height="358" src="https://1.bp.blogspot.com/-BiqNnuQjjQo/XwYMaOxY6gI/AAAAAAAAGKU/JnMtTp91tx4tjOdIvPC1FtMIcVAwDCipwCK4BGAYYCw/s640/05-functions.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The microservice or the long running applications: These are the long running applications that contain states, heavier or that is always being called. Some of them will send events to the mesh to trigger serverless functions to initiate and start, or simply another consumer of the events.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The Service Registry: For sharing standard event schemas and API designs across API and event-driven architectures, either for events listening by serverless function or regular applications.&amp;nbsp; Decoupling data structure and managing data types at runtime.&lt;/span&gt;&lt;/div&gt;&lt;a href="http://3.bp.blogspot.com/-bJ76f1rwwG4/XwYMqrx4Q5I/AAAAAAAAGKg/9hj3-te6GX8M-l-p_pbHhttg54ISSKkkACK4BGAYYCw/s1600/06-serviceregistry.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="330" src="https://3.bp.blogspot.com/-bJ76f1rwwG4/XwYMqrx4Q5I/AAAAAAAAGKg/9hj3-te6GX8M-l-p_pbHhttg54ISSKkkACK4BGAYYCw/s640/06-serviceregistry.png" width="640" /&gt;&lt;/a&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The API management: Gateway to secure and manage outgoing API endpoints. With access control and limits for the consumer, managing consoles and data analytics for access endpoints.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;a href="http://1.bp.blogspot.com/-3ZWXfdXpNxE/XwYM8UOrZjI/AAAAAAAAGKs/PLH_wysxSy4tqCQaolVKlxlV7NlD4ZvnACK4BGAYYCw/s1600/07-apigateway.png" imageanchor="1"&gt;&lt;img border="0" height="264" src="https://1.bp.blogspot.com/-3ZWXfdXpNxE/XwYM8UOrZjI/AAAAAAAAGKs/PLH_wysxSy4tqCQaolVKlxlV7NlD4ZvnACK4BGAYYCw/s640/07-apigateway.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;div dir="ltr" style="line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;Red Hat Display&amp;quot;, sans-serif; font-size: 11pt; font-style: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-position: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;These are again, my two cents on the components that you need to have in order to deliver a complete serverless application environment.&amp;nbsp; &lt;/span&gt;&lt;/div&gt;&lt;br class="Apple-interchange-newline" /&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hFXzh/~4/SdHN6r-iwic" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/LzcY6M-wUpI" height="1" width="1" alt=""/&gt;</content><summary>Serverless should not be optional, but instead it should be there for all cloud native environments. Of course not all applications should adopt serverless. But if you look closer, the majority of the modules in the application are stateless, often stash away in the corner, that are needed occasionally. Some need to to handle loads that are highly fluctuated. These are the perfect candidates to ru...</summary><dc:creator>CHRISTINA の J老闆</dc:creator><dc:date>2020-07-08T18:16:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/blogspot/hFXzh/~3/SdHN6r-iwic/serverless-integration-components.html</feedburner:origLink></entry><entry><title>Improved XML grammar binding and more in Red Hat VS Code XML extension 0.13.0</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/XaN9nTaeygk/" /><category term="Developer Tools" /><category term="Java" /><category term="VS Code" /><category term="edit xml" /><category term="LemMinX" /><category term="schema generator" /><category term="xml vs code" /><category term="XSD attribute" /><author><name>David Kwon</name></author><id>https://developers.redhat.com/blog/?p=743057</id><updated>2020-07-08T07:00:36Z</updated><published>2020-07-08T07:00:36Z</published><content type="html">&lt;p&gt;Following closely on the &lt;a href="https://developers.redhat.com/blog/2020/07/02/improved-schema-binding-and-more-in-red-hat-xml-extension-for-vs-code-0-12-0-and-lemminx/"&gt;huge 0.12.0 update&lt;/a&gt;, the new &lt;a href="https://developers.redhat.com/products/vscode-extensions/overview"&gt;Red Hat XML extension for Visual Studio Code (VS Code) 0.13.0 release&lt;/a&gt; makes XML editing in VS Code even better. For this release, we focused on making it easier to bind and generate a new XML Schema Definition (XSD) or Document Type Definition (DTD) grammar file from an existing XML file. Other highlights include document link support for &lt;code&gt;xsi:schemaLocation&lt;/code&gt;, XML catalog snippets, support for XML catalog path validation, and support for DTD &lt;code&gt;SystemId&lt;/code&gt; file path completion.&lt;/p&gt; &lt;p&gt;This article offers a quick review and demonstrates the new features in Red Hat&amp;#8217;s XML extension version 0.13.0 for &lt;a href="https://developers.redhat.com/blog/category/topics/vs-code/"&gt;VS Code&lt;/a&gt;. For the complete list of changes, see the &lt;a target="_blank" rel="nofollow" href="https://github.com/redhat-developer/vscode-xml/blob/master/CHANGELOG.md"&gt;changelog&lt;/a&gt;.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: The XML extension for VS Code, version 0.13.0, which consumes the LemMinX XML language server, is available in the &lt;a target="_blank" rel="nofollow" href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-xml"&gt;Visual Studio Code Marketplace&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Binding and generating XSD and DTD grammars&lt;/h2&gt; &lt;p&gt;Developers have previously reported issues with correctly binding an XML file with an XSD or DTD grammar. With the 0.13.0 release, we have added snippets and quick fixes to make this binding easier. The XML extension for VS Code can also generate XSD and DTD grammars from an existing XML file, which provides a great starter setup for new XML files.&lt;/p&gt; &lt;p&gt;The new snippets and quick fixes support two workflows.&lt;/p&gt; &lt;h3&gt;Create and bind a grammar for an existing XML file&lt;/h3&gt; &lt;p&gt;You have a non-empty XML file, and you wish to create and bind a grammar for it. You can now use a quick fix to bind the existing XML file to a to-be-generated XSD or DTD grammar file, as demonstrated in Figure 1.&lt;/p&gt; &lt;div id="attachment_746477" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/xmlgen_2.gif"&gt;&lt;img aria-describedby="caption-attachment-746477" class="wp-image-746477 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/xmlgen_2-640.gif" alt="An animated demonstration shows the steps in the console to bind and generate a new XSD grammar (file.xsd) to a pre-existing XML file (file.xml)." width="640" height="353" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746477" class="wp-caption-text"&gt;Figure 1: Use a quick fix to bind and generate a new XSD grammar to an existing XML file.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Create an XML file from scratch&lt;/h3&gt; &lt;p&gt;In this case, you are creating an XML file from scratch, and you wish to create and bind a grammar file for it. With the new XML extension update, you can use snippets to create an XML starter template that binds to a grammar file, then use a quick fix to generate the grammar file itself.&lt;/p&gt; &lt;p&gt;In the demo in Figure 2, we use the &lt;code&gt;noNamespaceSchemaLocation&lt;/code&gt; snippet to insert the XML starter template, then use a quick fix to create the &lt;code&gt;demo.xsd&lt;/code&gt; file with the generated XSD grammar.&lt;/p&gt; &lt;div id="attachment_746827" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/snippet_bind.gif"&gt;&lt;img aria-describedby="caption-attachment-746827" class="wp-image-746827 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/vscode-fig2-1.gif" alt="An animated demonstration shows how to use insert an XML starter template, use a snippet to bind an XSD grammar, and then use a a quick fix to generate the grammar." width="640" height="353" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746827" class="wp-caption-text"&gt;Figure 2: Use a snippet to bind an XSD grammar, then use a quick fix to generate the grammar.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The XML extension for VS Code now includes the following snippet prefixes to help bind a grammar:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;strong&gt;Snippet prefix&lt;/strong&gt;&lt;/td&gt; &lt;td&gt;&lt;strong&gt;Snippet content&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;schemaLocation&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Bind to an XML grammar with &lt;code&gt;xsi:schemaLocation&lt;/code&gt;.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;noNamespaceSchemaLocation&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Bind to an XML grammar with &lt;code&gt;xsi:noNamespaceSchemaLocation&lt;/code&gt;.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td rowspan="4"&gt;&lt;code&gt;&amp;#60;!DOCTYPE&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Bind to a DTD grammar with &lt;code&gt;PUBLIC DOCTYPE&lt;/code&gt;.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Bind to a DTD grammar with &lt;code&gt;PUBLIC DOCTYPE&lt;/code&gt; with a subset.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Bind to a DTD grammar with &lt;code&gt;SYSTEM DOCTYPE&lt;/code&gt;.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Bind to a DTD grammar with &lt;code&gt;SYSTEM DOCTYPE&lt;/code&gt; with a subset.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;Let&amp;#8217;s take a closer look at the schema generator and how it works for various scenarios.&lt;/p&gt; &lt;h3&gt;Characteristics of the schema generator&lt;/h3&gt; &lt;p&gt;When generating an XSD or DTD grammar based on pre-existing XML content, the generator accounts for the element and attribute context. Consider the following examples.&lt;/p&gt; &lt;h4&gt;Required attribute: Every element instance contains a certain attribute&lt;/h4&gt; &lt;p&gt;If the XML content contains a certain attribute in each instance of a particular element, the grammar generator will consider this attribute to be required.&lt;/p&gt; &lt;p&gt;Here is the initial XML content:&lt;/p&gt; &lt;pre&gt;&amp;#60;root&amp;#62; &amp;#60;item attr="value" /&amp;#62; &amp;#60;item attr="value" /&amp;#62; &amp;#60;item attr="value" /&amp;#62; &amp;#60;/root&amp;#62;&lt;/pre&gt; &lt;p&gt;Here is the generated XSD attribute:&lt;/p&gt; &lt;pre&gt;&amp;#60;xs:attribute name="attr" use="required" /&amp;#62;&lt;/pre&gt; &lt;p&gt;Here is the generated DTD attribute:&lt;/p&gt; &lt;pre&gt;&amp;#60;!ATTLIST item attr NMTOKEN #REQUIRED&amp;#62;&lt;/pre&gt; &lt;h4&gt;Fixed attribute value: The same attribute value occurs five or more times&lt;/h4&gt; &lt;p&gt;If the XML content contains an attribute with the same value appearing five or more times, the grammar generator will consider the value to be a fixed value.&lt;/p&gt; &lt;p&gt;Here is the XML content:&lt;/p&gt; &lt;pre&gt;&amp;#60;root&amp;#62; &amp;#60;item attr="A" /&amp;#62; &amp;#60;item attr="A" /&amp;#62; &amp;#60;item attr="A" /&amp;#62; &amp;#60;item attr="A" /&amp;#62; &amp;#60;item attr="A" /&amp;#62; &amp;#60;/root&amp;#62; &lt;/pre&gt; &lt;p&gt;Here is the generated XSD attribute:&lt;/p&gt; &lt;pre&gt;&amp;#60;xs:attribute name="attr" use="required" fixed="A" /&amp;#62;&lt;/pre&gt; &lt;p&gt;Here is the generated DTD attribute:&lt;/p&gt; &lt;pre&gt;&amp;#60;!ATTLIST item attr NMTOKEN #FIXED "A"&amp;#62;&lt;/pre&gt; &lt;h4&gt;ID attribute value: There are 10 or more unique attribute values&lt;/h4&gt; &lt;p&gt;If every instance of an element contains an attribute with at least 10 unique attribute values, the grammar generator will consider this attribute to be an ID specifier.&lt;/p&gt; &lt;p&gt;Here is the XML content:&lt;/p&gt; &lt;pre&gt;&amp;#60;root&amp;#62; &amp;#60;item attr="id1" /&amp;#62; &amp;#60;item attr="id2" /&amp;#62; &amp;#60;item attr="id3" /&amp;#62; &amp;#60;item attr="id4" /&amp;#62; &amp;#60;item attr="id5" /&amp;#62; &amp;#60;item attr="id6" /&amp;#62; &amp;#60;item attr="id7" /&amp;#62; &amp;#60;item attr="id8" /&amp;#62; &amp;#60;item attr="id9" /&amp;#62; &amp;#60;item attr="id10" /&amp;#62; &amp;#60;/root&amp;#62; &lt;/pre&gt; &lt;p&gt;Here is the generated XSD attribute:&lt;/p&gt; &lt;pre&gt;&amp;#60;xs:attribute name="attr" type="xs:ID" use="required" /&amp;#62;&lt;/pre&gt; &lt;p&gt;Here is the generated DTD attribute:&lt;/p&gt; &lt;pre&gt;&amp;#60;!ATTLIST item attr ID #REQUIRED&amp;#62;&lt;/pre&gt; &lt;h4&gt;Attribute enum value: The same set of attribute values is used repeatedly&lt;/h4&gt; &lt;p&gt;If the same set of distinct attribute values is used repeatedly, the grammar generator will consider these values to be enum values, therefore enforcing the possible values to be from the set. Enum values will only be generated if the attribute occurs at least 10 times, and only if the number of occurrences divided by the number of distinct values is greater than or equal to three.&lt;/p&gt; &lt;p&gt;Here is the XML content:&lt;/p&gt; &lt;pre&gt;&amp;#60;root&amp;#62; &amp;#60;item attr="A" /&amp;#62; &amp;#60;item attr="A" /&amp;#62; &amp;#60;item attr="A" /&amp;#62; &amp;#60;item attr="A" /&amp;#62; &amp;#60;item attr="A" /&amp;#62; &amp;#60;item attr="B" /&amp;#62; &amp;#60;item attr="B" /&amp;#62; &amp;#60;item attr="B" /&amp;#62; &amp;#60;item attr="B" /&amp;#62; &amp;#60;item attr="B" /&amp;#62; &amp;#60;/root&amp;#62; &amp;#60;!-- Attribute ‘attr’ occurs 10 times, with 2 distinct values --&amp;#62; &amp;#60;!-- (10 / 2) = 5 &amp;#62;= 3 --&amp;#62; &lt;/pre&gt; &lt;p&gt;Here is the generated XSD attribute:&lt;/p&gt; &lt;pre&gt;&amp;#60;xs:attribute name="attr" use="required"&amp;#62; &amp;#60;xs:simpleType&amp;#62; &amp;#60;xs:restriction base="xs:string"&amp;#62; &amp;#60;xs:enumeration value="A" /&amp;#62; &amp;#60;xs:enumeration value="B" /&amp;#62; &amp;#60;/xs:restriction&amp;#62; &amp;#60;/xs:simpleType&amp;#62; &amp;#60;/xs:attribute&amp;#62;&lt;/pre&gt; &lt;p&gt;Here is the generated DTD attribute:&lt;/p&gt; &lt;pre&gt;&amp;#60;!ATTLIST item attr (A|B) #REQUIRED&amp;#62;&lt;/pre&gt; &lt;h2&gt;Document link for the schema location&lt;/h2&gt; &lt;p&gt;The XML schema file specified in the &lt;code&gt;xsi:schemaLocation&lt;/code&gt; is now a document link, meaning that you can &lt;b&gt;Ctrl+click&lt;/b&gt; on the file name to quickly open it within VS Code. The demo in Figure 3 shows this action on the &lt;code&gt;xsi:schemaLocation&lt;/code&gt; document link.&lt;/p&gt; &lt;div id="attachment_746857" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/schemaLocation_goto.gif"&gt;&lt;img aria-describedby="caption-attachment-746857" class="wp-image-746857 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/vscode-fig3-1.gif" alt="An animated demo shows what happpens when you Ctrl+click the document link for xsi:schemaLocation." width="640" height="353" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746857" class="wp-caption-text"&gt;Figure 3: Ctrl+clicking on note.xsd opens the file in a new editor tab.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;XML catalog snippets&lt;/h2&gt; &lt;p&gt;We have added three catalog snippets to assist you in creating new catalogs from scratch:&lt;/p&gt; &lt;table style="height: 122px;" width="570"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;strong&gt;  Snippet prefix&lt;/strong&gt;&lt;/td&gt; &lt;td&gt;&lt;strong&gt;  Snippet content&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td rowspan="3"&gt;&lt;code&gt;&amp;#60;catalog&lt;/code&gt;&lt;/td&gt; &lt;td&gt;A new catalog without XSD or DTD.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;A new catalog bound using XSD.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;A new catalog bound using DTD.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;The demo in Figure 4 shows these catalog snippets being displayed in an empty file.&lt;/p&gt; &lt;div id="attachment_746877" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/catalog_snippets.gif"&gt;&lt;img aria-describedby="caption-attachment-746877" class="wp-image-746877 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/vscode-fig4.gif" alt="An animated demo shows the new catalog snippets in an empty file." width="640" height="353" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746877" class="wp-caption-text"&gt;Figure 4: The new catalog snippets displayed in an empty file.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;XML catalog path validation&lt;/h2&gt; &lt;p&gt;The XML extension for VS Code now verifies whether a path provided in the &lt;code&gt;xml.catalogs&lt;/code&gt; setting refers to an existing file. If one or more file paths do not exist, a notification lists the invalid path(s). At that point, you are provided a convenient button to navigate to the &lt;code&gt;xml.catalogs&lt;/code&gt; setting within the settings editor. (The button is especially useful when the settings editor is not open.)&lt;/p&gt; &lt;p&gt;In Figure 5, the first entry is an existing file, while the second and third are not. The XML extension issues an error notification for each invalid file path.&lt;/p&gt; &lt;div id="attachment_746897" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/catalog_validation.gif"&gt;&lt;img aria-describedby="caption-attachment-746897" class="wp-image-746897 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/vscode-fig5.gif" alt="An animated demo shows one entry for an existing file and two that are invalid. When the XML extension detects the invalid file paths, it issues error notifications on those paths." width="640" height="353" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746897" class="wp-caption-text"&gt;Figure 5: The XML extension issues error notifications for invalid file paths.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;DTD SystemId file path completion&lt;/h2&gt; &lt;p&gt;File paths now appear as completion options within the DTD &lt;code&gt;SystemId&lt;/code&gt; property. As demonstrated in Figure 6, the completion options appear for both absolute and relative paths.&lt;/p&gt; &lt;div id="attachment_746907" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/dtd_completion-1.gif"&gt;&lt;img aria-describedby="caption-attachment-746907" class="wp-image-746907 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/vscode-fig6.gif" alt="An animated demo shows a DTD SystemId filepath completion." width="640" height="353" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746907" class="wp-caption-text"&gt;Figure 6: The XML extension completes a DTD &lt;code&gt;SystemId&lt;/code&gt; file path.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Moving forward&lt;/h2&gt; &lt;p&gt;This wraps up the highlights of the Red Hat XML extension for VS Code 0.13.0 release. For future releases, we plan to provide more robust and configurable formatting support for XML documents. As always, please feel free to open a &lt;a target="_blank" rel="nofollow" href="https://github.com/redhat-developer/vscode-xml/issues/new"&gt;GitHub issue or feature request&lt;/a&gt;, and let us know what we should address in the next release. Thank you for reading and stay tuned for more features and improvements!&lt;/p&gt; &lt;h2&gt;Further information&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;The XML extension for VS Code, version 0.13.0, is now available in the &lt;a target="_blank" rel="nofollow" href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-xml"&gt;Visual Studio Code Marketplace&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Explore the &lt;a target="_blank" rel="nofollow" href="https://github.com/redhat-developer/vscode-xml"&gt;vscode-xml extension&lt;/a&gt; and the underlying XML language server, &lt;a target="_blank" rel="nofollow" href="https://github.com/eclipse/lemminx"&gt;LemMinX&lt;/a&gt; on GitHub.&lt;/li&gt; &lt;li&gt;Visit the &lt;a target="_blank" rel="nofollow" href="https://github.com/redhat-developer/vscode-xml/blob/master/CHANGELOG.md"&gt;XML extension for VS Code changelog&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Open a &lt;a target="_blank" rel="nofollow" href="https://github.com/redhat-developer/vscode-xml/issues/new"&gt;GitHub issue&lt;/a&gt; to let us know about bugs or new feature requests.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F08%2Fimproved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0%2F&amp;#38;linkname=Improved%20XML%20grammar%20binding%20and%20more%20in%20Red%20Hat%20VS%20Code%20XML%20extension%200.13.0" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F08%2Fimproved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0%2F&amp;#38;linkname=Improved%20XML%20grammar%20binding%20and%20more%20in%20Red%20Hat%20VS%20Code%20XML%20extension%200.13.0" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F08%2Fimproved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0%2F&amp;#38;linkname=Improved%20XML%20grammar%20binding%20and%20more%20in%20Red%20Hat%20VS%20Code%20XML%20extension%200.13.0" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F08%2Fimproved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0%2F&amp;#38;linkname=Improved%20XML%20grammar%20binding%20and%20more%20in%20Red%20Hat%20VS%20Code%20XML%20extension%200.13.0" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F08%2Fimproved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0%2F&amp;#38;linkname=Improved%20XML%20grammar%20binding%20and%20more%20in%20Red%20Hat%20VS%20Code%20XML%20extension%200.13.0" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F08%2Fimproved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0%2F&amp;#38;linkname=Improved%20XML%20grammar%20binding%20and%20more%20in%20Red%20Hat%20VS%20Code%20XML%20extension%200.13.0" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F08%2Fimproved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0%2F&amp;#38;linkname=Improved%20XML%20grammar%20binding%20and%20more%20in%20Red%20Hat%20VS%20Code%20XML%20extension%200.13.0" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F08%2Fimproved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0%2F&amp;#038;title=Improved%20XML%20grammar%20binding%20and%20more%20in%20Red%20Hat%20VS%20Code%20XML%20extension%200.13.0" data-a2a-url="https://developers.redhat.com/blog/2020/07/08/improved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0/" data-a2a-title="Improved XML grammar binding and more in Red Hat VS Code XML extension 0.13.0"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/08/improved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0/"&gt;Improved XML grammar binding and more in Red Hat VS Code XML extension 0.13.0&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/XaN9nTaeygk" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Following closely on the huge 0.12.0 update, the new Red Hat XML extension for Visual Studio Code (VS Code) 0.13.0 release makes XML editing in VS Code even better. For this release, we focused on making it easier to bind and generate a new XML Schema Definition (XSD) or Document Type Definition (DTD) grammar file [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/08/improved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0/"&gt;Improved XML grammar binding and more in Red Hat VS Code XML extension 0.13.0&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/08/improved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">743057</post-id><dc:creator>David Kwon</dc:creator><dc:date>2020-07-08T07:00:36Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/08/improved-xml-grammar-binding-and-more-in-red-hat-vs-code-xml-extension-0-13-0/</feedburner:origLink></entry><entry><title>Improve your code: Tales from confinement without a debugger</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/czbZJcGEpr8/" /><category term="Linux" /><category term="Operating System" /><category term="Programming Languages" /><category term="debugger" /><category term="dump file" /><category term="gdb" /><category term="printf" /><category term="refactoring code" /><category term="trace code" /><author><name>Aldy Hernandez</name></author><id>https://developers.redhat.com/blog/?p=726367</id><updated>2020-07-07T07:00:32Z</updated><published>2020-07-07T07:00:32Z</published><content type="html">&lt;p&gt;I have always been impressed by developers who make do without a debugger, and have often wished I could be more like them. I vaguely recall a colleague saying he never used a debugger, favoring &lt;code&gt;printf&lt;/code&gt; over &lt;code&gt;gdb&lt;/code&gt;. Also, in my rookie years, I vividly recall chasing a kernel bug with a friend who was using &lt;code&gt;objdump&lt;/code&gt; and the source of a much older kernel:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&lt;i&gt;&amp;#8220;Richard, shouldn&amp;#8217;t you at least use the correct source?&amp;#8221;&lt;br /&gt; &amp;#8220;Meh &amp;#8230; they&amp;#8217;re close enough.&amp;#8221;&lt;br /&gt; &lt;/i&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;I&amp;#8217;m still impressed.&lt;/p&gt; &lt;p&gt;Now that I have coded for some years, I&amp;#8217;ve noticed that I have picked up some bad habits along the way. Over-dependence on the debugger is one of them. I often use it as a high-powered crutch, which frequently leads me waist-deep into stack traces, rarely stopping to think things through. I get lost inside 20 levels of recursion and wonder why an irrelevant variable is being tickled.&lt;/p&gt; &lt;p&gt;Granted, there are many good uses for a debugger, but I&amp;#8217;m at 40% on the good use scale. My uses usually start benign but then degrade into cancerous abstractions. So, for my 20th GNU Compiler Collection (GCC) hacking anniversary, I decided to give myself the challenge of one month without a debugger. Here is the tale.&lt;/p&gt; &lt;p&gt;&lt;span id="more-726367"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;How I got here&lt;/h2&gt; &lt;p&gt;When I first started hacking GCC, newbies at Red Hat were put on old toolchain support duty. Nine times out of 10, those bugs had already been fixed upstream. I got quite adept at running two parallel &lt;code&gt;gdb&lt;/code&gt;s, single-stepping until I found a difference in the codes, and eventually finding the patch that fixed the bug. My technique was effective, but taught me very little about the underlying problem that I was &amp;#8220;fixing.&amp;#8221;&lt;/p&gt; &lt;p&gt;Now, I&amp;#8217;m a gray-bearded old fogey, and I can&amp;#8217;t count the number of times I have put a breakpoint on the garbage collector to find out who created a chunk of memory, just to save time analyzing the &lt;i&gt;where&lt;/i&gt; of a given optimization. I even have an embarrassing &lt;code&gt;gdb&lt;/code&gt; macro for doing it:&lt;/p&gt; &lt;pre&gt;define who_created_me break ggc-page.c:2683 if result == $arg0 &lt;/pre&gt; &lt;p&gt;(Yes, I have different macros for different GCC versions. That source line inevitably changes.)&lt;/p&gt; &lt;p&gt;I also have an assortment of &lt;code&gt;strcmp&lt;/code&gt; variants in my local tree that I use for comparing GNU Compiler Collection internals (GIMPLE), assembly output, and other GCC internal states. I am frequently seen setting breakpoints for particular patterns because I&amp;#8217;m trying awfully hard to avoid deep work. Here&amp;#8217;s an example:&lt;/p&gt; &lt;pre&gt;(gdb) break some_function if !strcmp_gimple(stmt, "var_3 = foo ();") &lt;/pre&gt; &lt;p&gt;Unfortunately, these cool party tricks seduce me into believing they&amp;#8217;re time savers. In reality, they quickly degrade into spelunking stack trace expeditions to nowhere. Frequently, the underlying reason for my expeditions is that I don&amp;#8217;t understand the code.&lt;/p&gt; &lt;h2&gt;Life without a debugger&lt;/h2&gt; &lt;p&gt;Initially, there was a lot of &amp;#8220;Crap, what if I can&amp;#8217;t solve this?&amp;#8221; What if my entire &lt;i&gt;programming-fu&lt;/i&gt; is dependent on the debugger? What if this is the &lt;i&gt;one&lt;/i&gt; bug that needs a debugger, and I have nothing but frustration to report in my weekly status report? After the initial panic, however, I got into a rhythm. Once that happened, I saw noticeable improvements in my thought process and my coding practice:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I noticed that a lot of my code was optimized for the debugging experience, not for readability or maintainability. I shied away from putting more than one statement in a line and broke things up to make it easier to set breakpoints. Doing this can sometimes, but not always, yield cleaner code.&lt;/li&gt; &lt;li&gt;I think it was Kernighan who said, &amp;#8220;&lt;a target="_blank" rel="nofollow" href="https://www.defprogramming.com/quotes-by/brian-w-kernighan/"&gt;Debugging is twice as hard as writing a program in the first place&lt;/a&gt;.&amp;#8221; I was confronted by this cold, hard truth from the onset and realized what a timesaver &lt;code&gt;gdb&lt;/code&gt; is for stepping through spaghetti code. I was also quick to notice, however, that I was spending so much time on specific problems because the code was horrible (which was not entirely my fault in a shared project). As a consequence, in my effort to debug less and fix more, my functions became smaller, less interdependent, and easier to understand. I also got quite good at refactoring other people&amp;#8217;s code in the compiler, to make things easier to understand. Overall, a win-win!&lt;/li&gt; &lt;li&gt;I judiciously added more asserts throughout the code to catch things earlier.&lt;/li&gt; &lt;li&gt;My dumps became more readable. It&amp;#8217;s surprising how many dumps in GCC are confusing at best, or useless at worst. Yes, I&amp;#8217;ve contributed my share of unreadable dumps.&lt;/li&gt; &lt;li&gt;The keystrokes I saved navigating stack frames and setting breakpoints, went instead to writing carefully crafted &lt;code&gt;printf&lt;/code&gt;s, which I made sure would persist into a dump file. Doing this saved me considerable time on subsequent &amp;#8220;debugging&amp;#8221; sessions.&lt;/li&gt; &lt;li&gt;Of the two times that I broke my promise and pulled out the debugger, both of them were because I was too tired to think the problem through. I hoped that randomly entering &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, and &lt;code&gt;print&lt;/code&gt; would magically solve my problem. Both times, what I needed was a break (no pun intended) and a fresh start the following day.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Lessons learned&lt;/h2&gt; &lt;p&gt;In the interest of self-disclosure, I should say that I am not about to give up using debuggers. They are great tools in my arsenal. I might be more hesitant to pull out a debugger instinctively, at the first sign of trouble, but there are excellent reasons to use one. During my period of &lt;code&gt;gdb&lt;/code&gt;-less confinement, I especially missed these uses for a debugger:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Debuggers are a boon for post-mortem analysis of why a process died. Going up and down the stack trace and examining variables is invaluable when inspecting a crash.&lt;/li&gt; &lt;li&gt;There is no real substitute for &lt;code&gt;gdb&lt;/code&gt;-ing a hung process to see where it&amp;#8217;s stuck. I had to debug a few of those in the last month, and I don&amp;#8217;t wish that pain on anyone.&lt;/li&gt; &lt;li&gt;I draw the line at adding a bunch of &lt;code&gt;printf&lt;/code&gt;s that are just emulating a &lt;code&gt;gdb&lt;/code&gt; session. If you&amp;#8217;re reinventing a debugger through &lt;code&gt;printf&lt;/code&gt;s in your code, for the love of Cthulhu, use the existing tools.&lt;/li&gt; &lt;li&gt;When you don&amp;#8217;t have the luxury of refactoring other people&amp;#8217;s spaghetti, a debugger can be a fast way of coming up to speed—just don&amp;#8217;t overuse it. At some point, you should sit down and understand the big picture.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;I learned a lot during my month without a debugger. My code got smaller and easier to understand at a glance, and I got much better at sitting down and analyzing from a big-picture perspective. The fear of being stuck without a debugger led me to introduce fewer bugs in the first place. I thought more about what I wrote and depended less on &lt;code&gt;gdb&lt;/code&gt; single-stepping sessions to analyze an algorithm. Overall, it was a good experience.&lt;/p&gt; &lt;p&gt;If you spend more time noticing the forest rather than the tiny ant on the tree, you&amp;#8217;re more likely to fix the problem for good. Debuggers, by design, help you look at the ant on the tree. Don&amp;#8217;t get me wrong; that microfocus is useful. But it shouldn&amp;#8217;t be your primary way of analyzing a problem. The last month was scary, but it was time well spent.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F07%2Fimprove-your-code-tales-from-confinement-without-a-debugger%2F&amp;#38;linkname=Improve%20your%20code%3A%20Tales%20from%20confinement%20without%20a%20debugger" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F07%2Fimprove-your-code-tales-from-confinement-without-a-debugger%2F&amp;#38;linkname=Improve%20your%20code%3A%20Tales%20from%20confinement%20without%20a%20debugger" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F07%2Fimprove-your-code-tales-from-confinement-without-a-debugger%2F&amp;#38;linkname=Improve%20your%20code%3A%20Tales%20from%20confinement%20without%20a%20debugger" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F07%2Fimprove-your-code-tales-from-confinement-without-a-debugger%2F&amp;#38;linkname=Improve%20your%20code%3A%20Tales%20from%20confinement%20without%20a%20debugger" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F07%2Fimprove-your-code-tales-from-confinement-without-a-debugger%2F&amp;#38;linkname=Improve%20your%20code%3A%20Tales%20from%20confinement%20without%20a%20debugger" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F07%2Fimprove-your-code-tales-from-confinement-without-a-debugger%2F&amp;#38;linkname=Improve%20your%20code%3A%20Tales%20from%20confinement%20without%20a%20debugger" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F07%2Fimprove-your-code-tales-from-confinement-without-a-debugger%2F&amp;#38;linkname=Improve%20your%20code%3A%20Tales%20from%20confinement%20without%20a%20debugger" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F07%2Fimprove-your-code-tales-from-confinement-without-a-debugger%2F&amp;#038;title=Improve%20your%20code%3A%20Tales%20from%20confinement%20without%20a%20debugger" data-a2a-url="https://developers.redhat.com/blog/2020/07/07/improve-your-code-tales-from-confinement-without-a-debugger/" data-a2a-title="Improve your code: Tales from confinement without a debugger"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/07/improve-your-code-tales-from-confinement-without-a-debugger/"&gt;Improve your code: Tales from confinement without a debugger&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/czbZJcGEpr8" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;I have always been impressed by developers who make do without a debugger, and have often wished I could be more like them. I vaguely recall a colleague saying he never used a debugger, favoring printf over gdb. Also, in my rookie years, I vividly recall chasing a kernel bug with a friend who was [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/07/improve-your-code-tales-from-confinement-without-a-debugger/"&gt;Improve your code: Tales from confinement without a debugger&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/07/improve-your-code-tales-from-confinement-without-a-debugger/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">726367</post-id><dc:creator>Aldy Hernandez</dc:creator><dc:date>2020-07-07T07:00:32Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/07/improve-your-code-tales-from-confinement-without-a-debugger/</feedburner:origLink></entry><entry><title>Profile-guided optimization in Clang: Dealing with modified sources</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/H85h2tXNMEo/" /><category term="clang/LLVM" /><category term="Linux" /><category term="Performance" /><category term="abstract syntax tree" /><category term="debug Clang" /><category term="LLVM IR" /><category term="profiling code" /><category term="recompile" /><author><name>Serge Guelton</name></author><id>https://developers.redhat.com/blog/?p=724947</id><updated>2020-07-06T07:00:49Z</updated><published>2020-07-06T07:00:49Z</published><content type="html">&lt;p&gt;Profile-guided optimization (PGO) is a now-common compiler technique for improving the compilation process. In PGO (sometimes pronounced &amp;#8220;pogo&amp;#8221;), an administrator uses the first version of the binary to collect a &lt;i&gt;profile&lt;/i&gt;, through instrumentation or sampling, then uses that information to guide the compilation process.&lt;/p&gt; &lt;p&gt;Profile-guided optimization can help developers make better decisions, for instance, concerning inlining or block ordering. In some cases, it can also lead to using obsolete profile information to guide compilation. For reasons that I will explain, this feature can benefit large projects. It also puts the burden on the compiler implementation to detect and handle inconsistencies.&lt;/p&gt; &lt;p&gt;This article focuses on how the &lt;a href="https://developers.redhat.com/blog/category/clang-llvm/"&gt;Clang compiler&lt;/a&gt; implements PGO, and specifically, how it instruments binaries. We will look at what happens when Clang instruments source code during the compilation step to collect profile information during execution. Then, I&amp;#8217;ll introduce a real-world bug that demonstrates the pitfalls of the current approach to PGO.&lt;/p&gt; &lt;p&gt;&lt;span id="more-724947"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: To learn more about PGO for Clang, see the &lt;a target="_blank" rel="nofollow" href="https://clang.llvm.org/docs/UsersManual.html#profile-guided-optimization"&gt;&lt;i&gt;Clang Compiler User&amp;#8217;s Manual&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Instrumenting code in Clang&lt;/h2&gt; &lt;p&gt;In Clang, the &lt;code&gt;-fprofile-instr-generate&lt;/code&gt; flag instructs the compiler to instrument code at the source instruction level, and the &lt;code&gt;-fprofile-generate&lt;/code&gt; flag instructs the compiler to instrument code at the LLVM intermediate representation (IR) level. Both approaches share a design philosophy, with some differences in granularity. Our topic is &lt;code&gt;-fprofile-instr-generate&lt;/code&gt;, and the way that it interacts with source code changes between profiling and recompilation.&lt;/p&gt; &lt;p&gt;Consider the following scenario:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Compile a code sample (&lt;code&gt;C0&lt;/code&gt;) with &lt;code&gt;-fprofile-instr-generate&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Run it to collect profile information (&lt;code&gt;P0&lt;/code&gt;).&lt;/li&gt; &lt;li&gt;Edit the &lt;code&gt;C0&lt;/code&gt; sample and turn it into a new version, &lt;code&gt;C1&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Compile &lt;code&gt;C1&lt;/code&gt; using the original &lt;code&gt;P0&lt;/code&gt; profile information.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;How Clang deals with code modification&lt;/h2&gt; &lt;p&gt;The scenario of using somewhat obsolete profile information might seem odd because we usually &lt;i&gt;compile, profile, &lt;/i&gt;and&lt;i&gt; recompile&lt;/i&gt;. The profiling step can be quite time-consuming, however. In some cases, it is tempting for big projects to provide downloadable profile information based on a source snapshot. Administrators can then use the snapshot to recompile the code without the pain of collecting a new profile every time. (The &lt;a target="_blank" rel="nofollow" href="https://github.com/dotnet/runtime"&gt;dotnet runtime&lt;/a&gt; takes this approach.)&lt;/p&gt; &lt;p&gt;Furthermore, for projects with a high commit rate, it could be unfeasible to provide profile information for each commit. As a result, slight changes to the code might not be documented in the profile used for recompilation. So, how would Clang cope with that?&lt;/p&gt; &lt;p&gt;The trivial answer of &amp;#8220;compare checksums for the whole file&amp;#8221; is not satisfying because a slight change would invalidate the whole compilation unit. But the actual mechanism relies on the same idea: On a &lt;i&gt;function&lt;/i&gt; basis, compute a checksum on the &lt;em&gt;abstract syntax trees&lt;/em&gt; (AST), based on the tree structure. That way, changing a function doesn&amp;#8217;t invalidate the profile information collected for other functions. Of course, this approach has limitations. Removing a call site changes the number of times the function is called, and thus its &lt;i&gt;hotness&lt;/i&gt;. But at least it prevents having profile information that points to code that no longer exists, and the other way around.&lt;/p&gt; &lt;p&gt;Currently, if such outdated profile information is used, the Clang compiler ignores it and prints a warning:&lt;/p&gt; &lt;pre&gt;&amp;#62; echo 'int main() { return 0; }' &amp;#62; a.c &amp;#38;&amp;#38; clang -fprofile-instr-generate a.c &amp;#38;&amp;#38; LLVM_PROFILE_FILE=a.profraw ./a.out &amp;#62; llvm-profdata merge -output=a.profdata a.profraw &amp;#62; printf '#include \nint main() { if(1) puts("hello"); return 0; }' &amp;#62; a.c &amp;#38;&amp;#38; clang -fprofile-instr-use=a.profdata a.c warning: profile data may be out of date: of 1 function, 1 has mismatched data that will be ignored [-Wprofile-instr-out-of-date] 1 warning generated. &lt;/pre&gt; &lt;h2&gt;When the improbable happens&lt;/h2&gt; &lt;p&gt;Recently, I was tasked with debugging a Clang segmentation fault (segfault), which was raised as an issue in &lt;a target="_blank" rel="nofollow" href="https://bugzilla.redhat.com/show_bug.cgi?id=1827282"&gt;Red Hat Bugzilla Bug 1827282&lt;/a&gt;. After debugging, I ended up with two functions having the same checksum:&lt;/p&gt; &lt;pre&gt;extern int bar; // first version void foo() { if (bar) { } if (bar) { } if (bar) { if (bar) { } } } // second version void foo() { if (bar) { } if (bar) { } if (bar) { if (bar) { if (bar) { } } } } &lt;/pre&gt; &lt;p&gt;That&amp;#8217;s a strange outcome because the checksum algorithm used in &lt;a target="_blank" rel="nofollow" href="https://llvm.org/doxygen/classllvm_1_1MD5.html"&gt;Clang relies on MD5&lt;/a&gt;, so the chance of having a conflict should be&lt;em&gt; very&lt;/em&gt; low. Did the improbable happen?&lt;/p&gt; &lt;p&gt;It turns out that it didn&amp;#8217;t. The conflict was due to a slight bug in the way the hashing was finalized, and we fixed it with a patch (&lt;a target="_blank" rel="nofollow" href="https://reviews.llvm.org/D79961"&gt;D79961&lt;/a&gt;). Basically, when computing the hash, a buffer (&lt;code&gt;uint64_t&lt;/code&gt;) needs to be filled. Once it&amp;#8217;s full, it is converted to an array of bytes and sent to the hashing routine. In the final steps, the &lt;code&gt;uint64_t&lt;/code&gt; was directly sent to the routine and implicitly converted to a &lt;code&gt;uint8_t&lt;/code&gt;, thus potentially ignoring the trailing nodes of the AST. We resolved the issue by adding a new test case that trivially tests that a small function change is reflected in the hash value.&lt;/p&gt; &lt;p&gt;The patch works, but it changes the hash of most existing functions—namely, of each of those that had more than one element in their last buffer. That is an important side-effect because changing the hash invalidates most of the existing cached profiling information. Fortunately, the patch doesn&amp;#8217;t impact the typical &amp;#8220;compile, profile, recompile&amp;#8221; scenario, but it could be an issue for large build systems that pre-compute profile data for the client to download as part of the build process.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Clang and GCC both support using obsolete profile information to guide the compilation process. If a function body changes, obsolete information is ignored. This feature can be beneficial for large projects, where gathering profile information is costly. This puts an extra burden on the compiler implementation to detect and handle inconsistencies, which also increases the likelihood of a compiler bug.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F06%2Fprofile-guided-optimization-in-clang-dealing-with-modified-sources%2F&amp;#38;linkname=Profile-guided%20optimization%20in%20Clang%3A%20Dealing%20with%20modified%20sources" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F06%2Fprofile-guided-optimization-in-clang-dealing-with-modified-sources%2F&amp;#38;linkname=Profile-guided%20optimization%20in%20Clang%3A%20Dealing%20with%20modified%20sources" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F06%2Fprofile-guided-optimization-in-clang-dealing-with-modified-sources%2F&amp;#38;linkname=Profile-guided%20optimization%20in%20Clang%3A%20Dealing%20with%20modified%20sources" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F06%2Fprofile-guided-optimization-in-clang-dealing-with-modified-sources%2F&amp;#38;linkname=Profile-guided%20optimization%20in%20Clang%3A%20Dealing%20with%20modified%20sources" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F06%2Fprofile-guided-optimization-in-clang-dealing-with-modified-sources%2F&amp;#38;linkname=Profile-guided%20optimization%20in%20Clang%3A%20Dealing%20with%20modified%20sources" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F06%2Fprofile-guided-optimization-in-clang-dealing-with-modified-sources%2F&amp;#38;linkname=Profile-guided%20optimization%20in%20Clang%3A%20Dealing%20with%20modified%20sources" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F06%2Fprofile-guided-optimization-in-clang-dealing-with-modified-sources%2F&amp;#38;linkname=Profile-guided%20optimization%20in%20Clang%3A%20Dealing%20with%20modified%20sources" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F06%2Fprofile-guided-optimization-in-clang-dealing-with-modified-sources%2F&amp;#038;title=Profile-guided%20optimization%20in%20Clang%3A%20Dealing%20with%20modified%20sources" data-a2a-url="https://developers.redhat.com/blog/2020/07/06/profile-guided-optimization-in-clang-dealing-with-modified-sources/" data-a2a-title="Profile-guided optimization in Clang: Dealing with modified sources"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/06/profile-guided-optimization-in-clang-dealing-with-modified-sources/"&gt;Profile-guided optimization in Clang: Dealing with modified sources&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/H85h2tXNMEo" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Profile-guided optimization (PGO) is a now-common compiler technique for improving the compilation process. In PGO (sometimes pronounced &amp;#8220;pogo&amp;#8221;), an administrator uses the first version of the binary to collect a profile, through instrumentation or sampling, then uses that information to guide the compilation process. Profile-guided optimization can help developers make better decisions, for instance, concerning [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/06/profile-guided-optimization-in-clang-dealing-with-modified-sources/"&gt;Profile-guided optimization in Clang: Dealing with modified sources&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/06/profile-guided-optimization-in-clang-dealing-with-modified-sources/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">724947</post-id><dc:creator>Serge Guelton</dc:creator><dc:date>2020-07-06T07:00:49Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/06/profile-guided-optimization-in-clang-dealing-with-modified-sources/</feedburner:origLink></entry></feed>
